
#include "exptype.h"

piece  base, arms1, arms2;

static-var  resourceRate, Stunned;

SetStunned(State)
{
	Stunned = State;
	if (State) {
	    call-script Deactivate();
	}else{
	    call-script Activate();
	}
}

Create()
{
	resourceRate = 0;
}


#define BASEPIECE base
#define MAXTILT 0
#include "../unit_hitbyweaponid_and_smoke.h"

Activate()
{
	if (Stunned){
		return (0);
	}
	spin arms1 around y-axis speed resourceRate accelerate <0.5>;
	spin arms2 around y-axis speed -1*resourceRate accelerate <0.5>;
}

Deactivate()
{
	stop-spin arms1 around y-axis decelerate <1>;
	stop-spin arms2 around y-axis decelerate <1>;
}



SetSpeed(windOrMetal)
{
	resourceRate = windOrMetal * 20;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode arms1 type BITMAPONLY | NOHEATCLOUD;
		explode arms2 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode arms1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode arms2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode arms1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode arms2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode arms1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode arms2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}

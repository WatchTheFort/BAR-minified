
#include "exptype.h"

piece  base, pad, head, nano1, nano2, dish;

static-var  spray;

// Signal definitions
#define SIGNAL_TURNON 4

#include "../../opencloseanim.h"


#define BASEPIECE base
#define MAXTILT 0
#include "../../unit_hitbyweaponid_and_smoke.h"

OpenBuildArea()
{
	set YARD_OPEN to 1;
	while( !get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 1;
	}
	set BUGGER_OFF to 0;
}

CloseBuildArea()
{
	set YARD_OPEN to 0;
	while( get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 0;
	}
	set BUGGER_OFF to 0;
}

Open()
{
	turn head to y-axis <0> now;
	turn head to y-axis <109> speed <100>;
	wait-for-turn head around y-axis;
	sleep 464;
	call-script OpenBuildArea();
	set INBUILDSTANCE to 1;
}

Stop()
{
	set INBUILDSTANCE to 0;
	call-script CloseBuildArea();
	turn head to y-axis <0> speed <100>;
	wait-for-turn head around y-axis;
	sleep 424;
}


Create()
{
	hide pad;
	hide nano1;
	hide nano2;
	spray = base;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	spin dish around y-axis speed <150.032967>;
	return (0);
}

QueryNanoPiece(pieceIndex)
{
	pieceIndex = nano1 + spray;
	spray = !spray;
}

Activate()
{
	signal SIGNAL_TURNON;
	start-script OpenCloseAnim(1);
}

Deactivate()
{
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;

	sleep 5000;
	set-signal-mask 0;
	start-script OpenCloseAnim(0);
}

StartBuilding()
{
	show nano1;
	show nano2;
}

StopBuilding()
{
	hide nano1;
	hide nano2;
}

QueryBuildInfo(pieceIndex)
{
	pieceIndex = pad;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode head type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type BITMAPONLY | NOHEATCLOUD;
		explode nano2 type BITMAPONLY | NOHEATCLOUD;
		explode pad type BITMAPONLY | NOHEATCLOUD;
		explode dish type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode head type FALL | NOHEATCLOUD;
		explode nano1 type FALL | NOHEATCLOUD;
		explode nano2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad type FALL | NOHEATCLOUD;
		explode dish type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode head type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode pad type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode dish type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode head type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode pad type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode dish type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}


#include "../recoil_common_includes.h"

piece  base, thrust, firepoint;


#define SIGNAL_AIM1 256



#define BASEPIECE base
#define HITSPEED <105.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 3
#define MAXTILT 100



Create()
{
	hide thrust;
}

Activate()
{
	show thrust;
}

Deactivate()
{
	hide thrust;
}

AimWeapon1()
{
	return (TRUE);
}

AimWeapon2()
{
	return (TRUE);
}

AimWeapon3()
{
	return (TRUE);
}

FireWeapon1()
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	emit-sfx 1024 from base;
	emit-sfx 2048 + 2 from firepoint; //Weapon3 creates a dragon's eye once weapon1 fires
	emit-sfx 4096 + 1 from base; //Weapon2 detonates the crawling bomb once weapon1 fires
	sleep 1000;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = base;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = base;
}

FireWeapon2()
{
	emit-sfx 4096 from base;
}

QueryWeapon2(pieceIndex)
{
	pieceIndex = base;
}

AimFromWeapon2(pieceIndex)
{
	pieceIndex = base;
}

FireWeapon3()
{
	return (0);
}

QueryWeapon3(pieceIndex)
{
	pieceIndex = base;
}

AimFromWeapon3(pieceIndex)
{
	pieceIndex = base;
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
    explode base type BITMAPONLY | NOHEATCLOUD;
	return corpsetype;
}

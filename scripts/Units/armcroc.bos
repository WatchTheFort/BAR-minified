
#include "exptype.h"

piece  base, turret, barrel, flare, sleeve, head, tail, lid, turretmis, misbox, misflare;

static-var  restore_delay, isMoving, gun_2, corrected;

// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_AIM2 512



RockUnit(anglex, anglez)
{
	turn base to x-axis anglex speed <50.000000>;
	turn base to z-axis <0> - anglez speed <50.000000>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <20.000000>;
	turn base to x-axis <0.000000> speed <20.000000>;
	return (0);
}


#define BASEPIECE base
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 5
#define MAXTILT 100

#include "unit_hitbyweaponid_and_smoke.h"


Create()
{
	hide flare;
	hide misflare;
	//turn turretmis to x-axis <-25> now;
//	turn aturret to y-axis <-180> speed <500>;
	isMoving = FALSE;
	restore_delay = 3000;
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 2;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	turn turret to y-axis <0.000000> speed <60.000000>;
	turn sleeve to x-axis <0.000000> speed <30.000000>;
	move barrel to z-axis [-4.000000] speed [12.000000];
	move turret to y-axis [0] speed [8];
	turn lid to x-axis <0.000000> speed <80>;	
	turn turretmis to y-axis <0> speed <180>;
	turn misbox to x-axis <0> speed <180>;
	sleep 1500;
	move turretmis to y-axis [0.000000] speed [5.000000];
	wait-for-turn lid around x-axis;
	wait-for-move turretmis along y-axis;
	wait-for-turn misbox around x-axis;
	
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

StartMoving(reversing)
{
	isMoving = TRUE;
}

StopMoving()
{
	isMoving = FALSE;
}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	move turret to y-axis [6] speed [20];
	wait-for-move turret along y-axis;
	turn turret to y-axis heading speed <90.000000>;
	move barrel to z-axis [0.000000] speed [8.000000];
	turn sleeve to x-axis <0.000000> - pitch speed <45.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
	emit-sfx 1024 + 0 from flare;
	move barrel to z-axis [-2.400000] speed [500.000000];
	wait-for-move barrel along z-axis;
	move barrel to z-axis [0.000000] speed [3.000000];
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = turret;
}

AimWeapon2(heading, pitch)
{
	signal SIGNAL_AIM2;
	set-signal-mask SIGNAL_AIM2;
	turn lid to x-axis <-179.000000> speed <200.000000>;
	
		
	corrected = heading;
	if (heading < <45> AND heading > 0) {
		corrected = <45>;
	}
	if (heading > <-45> AND heading < 0) {
		corrected = <-45>;
	}
	turn turretmis to y-axis corrected speed <180.000000>;

	
	turn misbox to x-axis -1*pitch speed <180>;
	move turretmis to y-axis [3.5] speed [2];
	wait-for-turn lid around x-axis;
	wait-for-move turretmis along x-axis;
	wait-for-turn turretmis around y-axis;
	wait-for-turn misbox around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon2()
{
	++gun_2;
	if (gun_2 == 4) gun_2 = 1;
	return (0);
}

AimFromWeapon2(pieceIndex)
{
	pieceIndex = turretmis;
	return (0);
}

QueryWeapon2(pieceIndex)
{
	pieceIndex = misflare;
	return (0);
}






Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode head type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel type FALL | NOHEATCLOUD;
		explode head type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type SMOKE | FALL | NOHEATCLOUD;
		explode barrel type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode barrel type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode head type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
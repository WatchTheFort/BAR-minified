#include "exptype.h"

piece  base, flare, door1, door2, antenna, greenlight, orangelight;

static-var  restore_delay, gun_1, statechg_DesiredState, statechg_StateChanging, missiles_stockpiled;

// Signal definitions
#define SIGNAL_AIM1 256


activatescr()
{
	if( TRUE )
	{
		turn door1 to z-axis <0.000000> now;
		turn door1 to z-axis <40> speed <73.000000>;
		turn door2 to z-axis <0.000000> now;
		turn door2 to z-axis <-40> speed <74.000000>;
		sleep 768;
	}

	sleep 3;
	return (0);
}

deactivatescr()
{
	if( TRUE )
	{
		turn door1 to z-axis <-90> now;
		turn door1 to z-axis <0.000000> speed <73.000000>;
		turn door2 to z-axis <90> now;
		turn door2 to z-axis <0.000000> speed <74.000000>;
		sleep 762;
	}

	sleep 14;
	return (0);
}


Go()
{
	call-script activatescr();
	return (0);
}

Stop()
{
	call-script deactivatescr();
	return (0);
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	return (0);
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
	return (0);
}

Create()
{
	hide flare;
	gun_1 = flare;
	restore_delay = 3000;
	missiles_stockpiled = 0;
	hide greenlight;
	show orangelight;
	call-script InitState();
}

#define SMOKEPIECE base
#include "smokeunit_thread_nohit.h"

Activate()
{
	start-script RequestState(0);
	return (0);
}

Deactivate()
{
	start-script RequestState(1);
	return (0);
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 2;
	return (0);
}

AimWeapon1(heading, pitch)
{
	start-script RequestState(0);
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	return (1);
}

FireWeapon1()
{
		gun_1 = flare;
	return (0);
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare;
	return (0);
}

AimFromWeapon1(pieceIndex)
		{
		pieceIndex = flare;
	return (0);
}



lights_orange()
{
	hide greenlight;
	show orangelight;
}

lights_green()
{
	show greenlight;
	hide orangelight;
}

SetStockpile(num_stockpiled)
{
	if (num_stockpiled == 0)
	{
		start-script lights_orange();
		sleep 100;
		missiles_stockpiled = 0;
	}
	if (num_stockpiled >= 1)
	{
		start-script lights_green();
		sleep 100;
		missiles_stockpiled = 1;
	}
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode flare type FALL | BITMAP1 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
	return (corpsetype);
}

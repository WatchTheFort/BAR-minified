#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

//piece  base, cockpit, bombdrop, lwing1, lwing2, rwing1, rwing2, lflap1, lflap2, rflap1, rflap2, lsensor, rsensor,lbox, rbox,  connectors,  rthruster, lthruster, thrust1, thrust2;
piece base, cockpit, rwing, rventblade, rbwing, lwing, lventblade, lbwing, fdoor, bdoor, bombdrop, thrust1;
static-var  statechg_DesiredState, statechg_StateChanging;


activatescr()
{
	if( TRUE )
	{
		move lwing to x-axis [-3.0] speed [4.0];
		move rwing to x-axis [3.0] speed [4.0];
		sleep 750;
	}
		if( TRUE )
	{
		spin rventblade around y-axis speed <360> accelerate <37>;
		spin lventblade around y-axis speed <360> accelerate <37>;
		sleep 998;
	}
	sleep 12;
}

deactivatescr()
{
	if( TRUE )
	{
		move lwing to x-axis [3.0] speed [6.0];
		move rwing to x-axis [-3.0] speed [6.0];
		sleep 683;
	}
	if( TRUE )
	{
		stop-spin lventblade around y-axis decelerate <1>;
		stop-spin rventblade around y-axis decelerate <1>;
		sleep 998;
	}
	sleep 33;
}

HitByWeapon(anglex, anglez)
{
	turn base to z-axis anglez speed <105.000000>;
	turn base to x-axis <0> - anglex speed <105.000000>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <15.000000>;
	turn base to x-axis <0.000000> speed <15.000000>;
}


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 and healthpercent > 0 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script activatescr();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script deactivatescr();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	call-script InitState();
	start-script SmokeUnit();
	move lwing to x-axis [3.0] now;
	move rwing to x-axis [-3.0] now;
	
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

SweetSpot(piecenum)
{
	piecenum = base;
}

QueryPrimary(piecenum)
{
	piecenum = bombdrop;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cockpit type BITMAPONLY | NOHEATCLOUD;
		explode lwing type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lbwing type BITMAPONLY | NOHEATCLOUD;
		explode rwing type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rbwing type BITMAPONLY | NOHEATCLOUD;
		explode bombdrop type SMOKE | FALL | NOHEATCLOUD;
		explode lventblade type BITMAPONLY | NOHEATCLOUD;
		explode rventblade type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cockpit type BITMAPONLY | NOHEATCLOUD;
		explode lwing type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lbwing type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rwing type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rbwing type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode bombdrop type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lventblade type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rventblade type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cockpit type BITMAPONLY | NOHEATCLOUD;
		explode lwing type SMOKE | FALL | NOHEATCLOUD;
		explode lbwing type SMOKE | FALL | NOHEATCLOUD;
		explode rwing type SMOKE | FALL | NOHEATCLOUD;
		explode rbwing type SMOKE | FALL | NOHEATCLOUD;
		explode bombdrop type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lventblade type SMOKE | FALL | NOHEATCLOUD;
		explode rventblade type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cockpit type BITMAPONLY | NOHEATCLOUD;
		explode lwing type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lbwing type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode rwing type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rbwing type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode bombdrop type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lventblade type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rventblade type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}

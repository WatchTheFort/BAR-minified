#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"
#include "StateChg.h"

#define SIG_ANIM 2

piece  base, cover, converter;

static-var  Active, coverState, convPhase;

Go()
{
	set ARMORED to 0;  //Not needed as MM in BAR have no damage modifyer tag set
}

Stop()
{
	set ARMORED to 1;
}

MovementControl()
{
	while (TRUE)
	{
		if (Active)
		{
			if (coverState)
			{
				hide cover;
				coverState = 0;
				convPhase = 0;
			}
			if (convPhase)
			{
				move converter to y-axis [12] speed [5.000000];
			}
			if (!convPhase)
			{
				move converter to y-axis [6] speed [5.000000];
			}
			convPhase = !convPhase;
			sleep 1500;
		} 
		if (!Active)
		{
			if (!coverState)
			{
				move converter to y-axis [0] speed [6];
				wait-for-move converter along y-axis;
				show cover;
				coverState = 1;
			}
		}
		sleep 100;
	}	
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}

	start-script MovementControl();

	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MMStatus(State)
{
	Active = State;
	//get PRINT(Active);
}

Create()
{
	coverState = 1;
	convPhase = 0;
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode converter type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode converter type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode converter type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode converter type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}

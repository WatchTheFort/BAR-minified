#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"
#include "StateChg.h"

#define SIG_ANIM 2

piece  base, cover, converter;

static-var  Active;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}

	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MMStatus(State)
{
	Active = State;
	if (Active){
		hide cover;
		show converter;
		move converter to y-axis [6] speed [12.000000];	
	}
	else
	{
		move converter to y-axis [1] speed [12];
		wait-for-move converter along y-axis;
		hide converter;
		show cover;
	}
	//get PRINT(get GAME_FRAME, Active);
	
}

Create()
{
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode converter type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode converter type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode converter type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode converter type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}

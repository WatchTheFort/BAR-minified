
#include "../../recoil_common_includes.h"

piece  base, ground, wake1, wake2, turret1, sleeve1, barrel11, flare11, flare12, barrel12, turret2, sleeve2, barrel21, flare21, flare22, barrel22;
		
static-var  gun_1, gun_2, restore_delay,   aimDir, oldHead;

// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_AIM2 512
#define SIGNAL_MOVE 1


#define RB_MASS 20
#define RB_LENGTH 5
#define RB_WIDTH 3
#define RB_PITCH_SPEED 200
#define RB_PITCH_ACCELERATION 20
#define RB_ROLL_ACCELERATION 8
#define RB_RECOIL_ENERGY_2 500
#define RB_WAKE_PIECE wake1
#define RB_WAKE_PIECE2 wake2
#define RB_WAKE_CEG 1024 + 1
#define RB_IDLE_KICK 10000

#include "../../bar_ships_common.h"



Create()
{
	hide wake2;
	hide wake1;
	hide flare22;
	hide flare21;
	hide sleeve2;
	hide flare12;
	hide flare11;
	hide sleeve1;
	hide ground;
	hide flare11;
	hide flare12;
	hide flare21;
	hide flare22;
	gun_1 = 0;
	gun_2 = 0;
	restore_delay = 3000;
	start-script InitRockBoat();
	SLEEP_UNTIL_UNITFINISHED;
	start-script BoatPhysics();
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 2;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	set-signal-mask 0;
	turn turret1 to y-axis <0.0> speed <120.0>;
	turn sleeve1 to x-axis <0.0> speed <60.0>;

	turn turret2 to y-axis <0.0> speed <120.0>;
	turn sleeve2 to x-axis <0.0> speed <60.0>;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}



StartMoving(reversing)
{

}

StopMoving()
{

}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = turret1;
}

QueryWeapon1(pieceIndex)
{
	if( gun_1 == 0 )
	{
		pieceIndex = flare11;
	}
	if( gun_1 == 1 )
	{
		pieceIndex = flare12;
	}
	if( gun_1 == 2 )
	{
		pieceIndex = flare11;
	}
	if( gun_1 == 3 )
	{
		pieceIndex = flare12;
	}
}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	turn turret1 to y-axis heading speed <120.0>;
	turn sleeve1 to x-axis <0.0> - pitch speed <60.0>;
	spin barrel11 around z-axis speed <1000>;
	spin barrel12 around z-axis speed <1000>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeve1 around x-axis;
	aimDir = heading;
	stop-spin barrel11 around z-axis decelerate <10>;
	stop-spin barrel12 around z-axis decelerate <10>;
	start-script RestoreAfterDelay();
	return (1);
}

Shot1()
{
	if( gun_1 == 0 )
	{
		move barrel11 to z-axis [-1.5] speed [1000];
		sleep 100;
		move barrel11 to z-axis [0] speed [6];
		gun_1 = 1;
		return (1);
	}
	if ( gun_1 == 1 )
	{
		move barrel12 to z-axis [-1.5] speed [1000];
		sleep 100;
		move barrel12 to z-axis [0] speed [6];
		gun_1 = 2;
		return (1);
	}
	if( gun_1 == 2 )
	{
		move barrel11 to z-axis [-1.5] speed [1000];
		sleep 100;
		move barrel11 to z-axis [0] speed [6];
		gun_1 = 3;
		return (1);
	}
	if ( gun_1 == 3 )
	{
		move barrel12 to z-axis [-1.5] speed [1000];
		sleep 100;
		move barrel12 to z-axis [0] speed [6];
		gun_1 = 0;
		return (1);
	}
}

AimWeapon2(heading, pitch)
{
	signal SIGNAL_AIM2;
	set-signal-mask SIGNAL_AIM2;
	turn turret2 to y-axis heading speed <120.0>;
	turn sleeve2 to x-axis <0.0> - pitch speed <60.0>;
	spin barrel21 around z-axis speed <1000>;
	spin barrel22 around z-axis speed <1000>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeve2 around x-axis;
	aimDir = heading;
	stop-spin barrel21 around z-axis decelerate <10>;
	stop-spin barrel22 around z-axis decelerate <10>;
	start-script RestoreAfterDelay();
	return (1);
}

Shot2()
{
	if( gun_2 == 0 )
	{
		move barrel21 to z-axis [-1.5] speed [1000];
		sleep 100;
		move barrel21 to z-axis [0] speed [6];
		gun_2 = 1;
		return (1);
	}
	if ( gun_2 == 1 )
	{
		move barrel22 to z-axis [-1.5] speed [1000];
		sleep 100;
		move barrel22 to z-axis [0] speed [6];
		gun_2 = 2;
		return (1);
	}
		if( gun_2 == 2 )
	{
		move barrel21 to z-axis [-1.5] speed [1000];
		sleep 100;
		move barrel21 to z-axis [0] speed [6];
		gun_2 = 3;
		return (1);
	}
	if ( gun_2 == 3 )
	{
		move barrel22 to z-axis [-1.5] speed [1000];
		sleep 100;
		move barrel22 to z-axis [0] speed [6];
		gun_2 = 0;
		return (1);
	}
}

AimFromWeapon2(pieceIndex)
{
	pieceIndex = turret2;
}

QueryWeapon2(pieceIndex)
{
	if( gun_2 == 0 )
	{
		pieceIndex = flare21;
	}
	if( gun_2 == 1 )
	{
		pieceIndex = flare22;
	}
	if( gun_2 == 2 )
	{
		pieceIndex = flare21;
	}
	if( gun_2 == 3 )
	{
		pieceIndex = flare22;
	}
}

AimWeapon3(heading, pitch)
{
	return (1);
}

AimFromWeapon3(pieceIndex)
{
	pieceIndex = base;
}

QueryWeapon3(pieceIndex)
{
	pieceIndex = base;
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel11 type BITMAPONLY | BITMAP1 | NOHEATCLOUD;
		explode turret1 type BITMAPONLY | BITMAP1 | NOHEATCLOUD;
		explode wake2 type BITMAPONLY | BITMAP3 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel11 type FALL | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
		explode barrel12 type FALL | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
		explode wake2 type FALL | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode barrel11 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
	explode barrel12 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
	explode wake1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
	explode wake2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
	return corpsetype;
}


#include "../../recoil_common_includes.h"

piece turret, smoke1, smoke2, base, flare, spindle, aimpoint;

static-var  restore_delay, gun_1, aimy1velocity, aimy1target, aimy1position;

// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_MOVE 1


#define VD_PIECE1 smoke1
#define VD_PIECE2 smoke2
#define VD_AMPHIBIOUS
#define VD_DIRTCEG 1024 + 1
#include "../../vehicle_dirt_cegs.h"



Create()
{
	hide aimpoint;
	hide flare;
	hide smoke1;
	hide smoke2;
	hide flare;
	gun_1 = 0;
	aimy1velocity = 0;
	aimy1target = 0;
	aimy1position = 0;
	restore_delay = 3000;
	call-script CATT1_Init();
}

#define BASEPIECE base
#define HITSPEED <45.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 7
#define MAXTILT 100
#define RECOIL_POWER 20000
#include "../../unit_hitbyweaponid_and_smoke.h"


StartMoving(reversing)
{
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;
	start-script Vehicle_Dirt_Ceg();
}


StopMoving()
{
  signal SIGNAL_MOVE;
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 2;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	turn turret to y-axis <0.0> speed <35.005495>;
	turn turret to x-axis <0.0> speed <35.005495>;
	//turn sleeves to x-axis <0.0> speed <15.0>;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

//-------------------------------CONSTANT ACCELERATION TURRET TURNING---------------------------
// MaxVelocity and acceleration are in degrees per frame (not second!)
// Jerk is the minimum velocity of the turret
// A high precision requirement can result in overshoots if desired 
// (c) CC BY NC ND Beherith mysterme@gmail.com

#define CATT1_PIECE_X turret
#define CATT1_PIECE_Y turret

#define CATT1_MAX_VELOCITY <9.0>
#define CATT1_ACCELERATION <0.2>
#define CATT1_JERK <1.0>
#define CATT1_PRECISION <1.2>
#define CATT1_RESTORE_SPEED <3.0>
#define CATT1_PITCH_SPEED <45>

#include "../../constant_acceleration_turret_turning_1.h"

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	//We can do this any time
	call-script CATT1_Aim(heading,pitch);
	return (1);
}

FireWeapon1()
{
	++gun_1;
	if( gun_1 >= 3 )
	{
		gun_1 = 0;
	}
	sleep 175;
	turn spindle to z-axis <120.027473>*gun_1 speed <400.093407>;
	//start-script PositionSpindle();
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare;
}



AimFromWeapon1(pieceIndex)
{
	pieceIndex = aimpoint;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}

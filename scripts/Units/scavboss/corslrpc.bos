
#include "../../recoil_common_includes.h"

piece  base, flare, flareb, turret, gun, bore, cylinder, barrel, wake1;

static-var  restore_delay, aimDir;

// Signal definitions
#define SIGNAL_MOVE 1
#define SIGNAL_AIM1 256

#define RB_MASS 40
#define RB_LENGTH 8
#define RB_WIDTH 3
#define RB_PITCH_ACCELERATION 10
#define RB_ROLL_ACCELERATION 8
#define RB_WAKE_PIECE wake1
#define RB_WAKE_CEG 2
#define RB_ROCKUNIT 100

#include "../../bar_ships_common.h"


Create()
{
	hide flare;
	hide wake1;
	hide flareb;
	hide flare;
	hide flareb;
	restore_delay = 3000;
	start-script InitRockBoat();
	SLEEP_UNTIL_UNITFINISHED;
	start-script BoatPhysics();
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 2;
	return (0);
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	turn turret to y-axis <0.0> speed <7.0>;
	turn gun to x-axis <0.0> speed <10.0>;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

StartMoving(reversing)
{

}

StopMoving()
{

}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	turn turret to y-axis heading speed <10.0>;
	turn gun to x-axis <0.0> - pitch speed <7.0>;
	wait-for-turn turret around y-axis;
	wait-for-turn gun around x-axis;
	aimDir = heading;
	return (1);
}

FireWeapon1()
{
	move barrel to z-axis [-7.500000] speed [500.0];
	move gun to z-axis [-4.0] speed [500.0];
	wait-for-move barrel along z-axis;
	emit-sfx 1024 + 0 from flare;
	sleep 200;
	move barrel to z-axis [0.0] speed [7.0];
	move gun to z-axis [0.0] speed [7.0];
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = gun;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare;
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode barrel type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type FALL | NOHEATCLOUD;
		explode barrel type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode barrel type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}


#include "../../recoil_common_includes.h"

piece  base, flare1, flare2, turret1, turret2, turret3, turret4, barrel101, barrel102, barrel103, barrel104,
       housing101, housing102, housing103, housing104, spindle1, neck1, barrel201, barrel202, barrel203, barrel204,
       housing201, housing202, housing203, housing204, spindle2, neck2, ground;

static-var  gun_1, gun_2, restore_delay, oldHead;

// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_AIM2 512
#define SIGNAL_MOVE 1

#define RB_MASS 40
#define RB_LENGTH 8
#define RB_WIDTH 4
#define RB_PITCH_SPEED 200
#define RB_PITCH_ACCELERATION 20
#define RB_ROLL_ACCELERATION 8
#define RB_RECOIL_ENERGY_2 500
#define RB_WAKE_PIECE ground
#define RB_WAKE_CEG 2
#define RB_IDLE_KICK 10000

#include "../../bar_ships_common.h"

Create()
{
	hide flare2;
	hide flare1;
	hide ground;
	hide flare1;
	gun_1 = flare1;
	spin flare1 around z-axis speed <250.060440>;
	hide flare2;
	gun_2 = flare2;
	spin flare2 around z-axis speed <250.060440>;
	restore_delay = 3000;
	start-script InitRockBoat();
	SLEEP_UNTIL_UNITFINISHED;
	start-script BoatPhysics();
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 2;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	turn turret3 to y-axis <0.> speed <60.>;
	turn turret4 to y-axis <0.> speed <60.>;
	turn spindle1 to x-axis <0.> speed <30.>;
	turn spindle2 to x-axis <0.> speed <30.>;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

StartMoving(reversing)
{

}

StopMoving()
{

}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	turn turret3 to y-axis heading speed <60.>;
	turn neck1 to x-axis <0.> - pitch speed <30.>;
	wait-for-turn turret3 around y-axis;
	wait-for-turn neck1 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon2(heading, pitch)
{
	signal SIGNAL_AIM2;
	set-signal-mask SIGNAL_AIM2;
	turn turret4 to y-axis heading speed <60.>;
	turn neck2 to x-axis <0.> - pitch speed <30.>;
	wait-for-turn turret4 around y-axis;
	wait-for-turn neck2 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
	emit-sfx 1024 + 0 from flare1;
	if( gun_1 == 0 )
	{
		move barrel101 to z-axis [-10.0] now;
		move barrel101 to z-axis [0.0] speed [10.0];
		turn spindle1 to z-axis <90.0> speed <230.0>;
	}
	if( gun_1 == 1 )
	{
		move barrel102 to z-axis [-10.0] now;
		move barrel102 to z-axis [0.0] speed [10.0];
		turn spindle1 to z-axis <180.0> speed <230.0>;
	}
	if( gun_1 == 2 )
	{
		move barrel103 to z-axis [-10.0] now;
		move barrel103 to z-axis [0.0] speed [10.0];
		turn spindle1 to z-axis <270.0> speed <230.0>;
	}
	if( gun_1 == 3 )
	{
		move barrel104 to z-axis [-10.0] now;
		move barrel104 to z-axis [0.0] speed [10.0];
		turn spindle1 to z-axis <0.0> speed <230.0>;
	}
	gun_1 = (gun_1 + 1) % 4;
}

FireWeapon2()
{
	emit-sfx 1024 + 0 from flare2;
	if( gun_2 == 0 )
	{
		move barrel201 to z-axis [-10.0] now;
		move barrel201 to z-axis [0.0] speed [10.0];
		turn spindle2 to z-axis <90.0> speed <230.0>;
	}
	if( gun_2 == 1 )
	{
		move barrel202 to z-axis [-10.0] now;
		move barrel202 to z-axis [0.0] speed [10.0];
		turn spindle2 to z-axis <180.0> speed <230.0>;
	}
	if( gun_2 == 2 )
	{
		move barrel203 to z-axis [-10.0] now;
		move barrel203 to z-axis [0.0] speed [10.0];
		turn spindle2 to z-axis <270.0> speed <230.0>;
	}
	if( gun_2 == 3 )
	{
		move barrel204 to z-axis [-10.0] now;
		move barrel204 to z-axis [0.0] speed [10.0];
		turn spindle2 to z-axis <0.0> speed <230.0>;
	}

	gun_1 = (gun_1 + 1) % 4;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare1;
}

QueryWeapon2(pieceIndex)
{
	pieceIndex = flare2;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = spindle1;
}

AimFromWeapon2(pieceIndex)
{
	pieceIndex = spindle2;
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode ground type BITMAPONLY | NOHEATCLOUD;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret3 type BITMAPONLY | NOHEATCLOUD;
		explode turret4 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode ground type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode base type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode ground type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode ground type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode base type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode turret3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}

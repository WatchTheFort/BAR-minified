#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  aimy1, rfirept, lfirept, pelvis, rfoot, lfoot, launcher, lthigh,
       rthigh, rleg, lleg, turret,rexhaust,lexhaust,lknee,rknee;

static-var  gun_1, notMoving, moveSpeed, currentSpeed, animSpeed, wpn1_lasthead;
static-var  maxSpeed, animFramesPerKeyframe, bMoving;


// Signal definitions
#define SIG_MOVE			2
#define SIG_WALK			4
#define SIG_AIM				8


walk()
{
	set-signal-mask SIG_WALK;	if (bMoving) { //Frame:4
			turn launcher to x-axis <0.700000> speed <155.999983> / animSpeed; 
			turn lfoot to x-axis <-45.174461> speed <1339.883614> / animSpeed; 
			turn lfoot to z-axis <-8.711228> speed <587.665429> / animSpeed; 
			turn lfoot to y-axis <-2.849490> speed <76.187203> / animSpeed; 
			turn lknee to x-axis <-15.469228> speed <442.477796> / animSpeed; 
			turn lknee to z-axis <1.487861> speed <131.493251> / animSpeed; 
			turn lknee to y-axis <1.188732> speed <40.966077> / animSpeed; 
			turn lleg to x-axis <31.992186> speed <821.683206> / animSpeed; 
			turn lleg to z-axis <0.432714> speed <87.882955> / animSpeed; 
			turn lleg to y-axis <-0.824043> speed <151.248443> / animSpeed; 
			turn lthigh to x-axis <28.463688> speed <786.618223> / animSpeed; 
			turn lthigh to z-axis <6.414564> speed <383.071557> / animSpeed; 
			turn lthigh to y-axis <-1.128280> speed <123.646459> / animSpeed; 
			turn pelvis to x-axis <-0.000000> speed <149.999983> / animSpeed; 
			turn rfoot to x-axis <38.546265> speed <1128.417134> / animSpeed; 
			turn rfoot to z-axis <-6.897524> speed <101.979838> / animSpeed; 
			turn rfoot to y-axis <-1.430482> speed <57.160004> / animSpeed; 
			turn rknee to x-axis <-3.807909> speed <92.923470> / animSpeed; 
			turn rknee to z-axis <-1.404396> speed <130.789327> / animSpeed; 
			turn rknee to y-axis <-0.318391> speed <16.013834> / animSpeed; 
			turn rleg to x-axis <-19.158431> speed <688.531183> / animSpeed; 
			turn rleg to z-axis <-0.818183> speed <96.474476> / animSpeed; 
			turn rleg to y-axis <1.904704> speed <175.370213> / animSpeed; 
			turn rthigh to x-axis <-28.696056> speed <913.087277> / animSpeed; 
			turn rthigh to z-axis <-1.433386> speed <225.865310> / animSpeed; 
			turn rthigh to y-axis <2.035195> speed <143.623734> / animSpeed; 
		sleep 131;
	}
	while(bMoving) {
		if (bMoving) { //Frame:8
			turn launcher to x-axis <-2.450000> speed <94.499997> / animSpeed; 
			turn lfoot to x-axis <-39.050804> speed <183.709720> / animSpeed; 
			turn lfoot to z-axis <-3.901796> speed <144.282974> / animSpeed; 
			turn lfoot to y-axis <-0.770642> speed <62.365451> / animSpeed; 
			turn lknee to x-axis <-29.895461> speed <432.787014> / animSpeed; 
			turn lknee to z-axis <2.111918> speed <18.721710> / animSpeed; 
			turn lknee to y-axis <0.518455> speed <20.108322> / animSpeed; 
			turn lleg to x-axis <51.553254> speed <586.832027> / animSpeed; 
			turn lleg to z-axis <-0.204225> speed <19.108161> / animSpeed; 
			turn lleg to y-axis <3.951526> speed <143.267072> / animSpeed; 
			turn lthigh to x-axis <55.759701> speed <818.880378> / animSpeed; 
			turn lthigh to z-axis <5.222918> speed <35.749355> / animSpeed; 
			turn lthigh to y-axis <0.884297> speed <60.377311> / animSpeed; 
			move pelvis to y-axis [-0.790000] speed [23.699999] / animSpeed; 
			turn pelvis to x-axis <4.568749> speed <137.062482> / animSpeed; 
			turn pelvis to y-axis <-4.000000> speed <119.999986> / animSpeed; 
			turn rfoot to x-axis <5.633654> speed <987.378323> / animSpeed; 
			turn rfoot to z-axis <0.002615> speed <207.004152> / animSpeed; 
			turn rfoot to y-axis <-0.002489> speed <42.839816> / animSpeed; 
			turn rknee to x-axis <-36.445131> speed <979.116668> / animSpeed; 
			turn rknee to z-axis <1.049664> speed <73.621793> / animSpeed; 
			turn rknee to y-axis <-0.903029> speed <17.539158> / animSpeed; 
			turn rleg to x-axis <47.379492> speed <1996.137709> / animSpeed; 
			turn rleg to z-axis <-2.989707> speed <65.145727> / animSpeed; 
			turn rleg to y-axis <5.000039> speed <92.860037> / animSpeed; 
			turn rthigh to x-axis <-58.670553> speed <899.234907> / animSpeed; 
			turn rthigh to z-axis <-3.659250> speed <66.775942> / animSpeed; 
			turn rthigh to y-axis <5.419124> speed <101.517866> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:12
			turn launcher to x-axis <7.100000> speed <286.499986> / animSpeed; 
			turn lfoot to x-axis <-41.708304> speed <79.725007> / animSpeed; 
			turn lfoot to z-axis <-0.001299> speed <117.014899> / animSpeed; 
			turn lfoot to y-axis <-0.002305> speed <23.050116> / animSpeed; 
			turn lknee to x-axis <12.063780> speed <1258.777235> / animSpeed; 
			turn lknee to z-axis <0.544262> speed <47.029656> / animSpeed; 
			turn lknee to y-axis <2.208493> speed <50.701146> / animSpeed; 
			turn lleg to x-axis <4.221316> speed <1419.958139> / animSpeed; 
			turn lleg to z-axis <0.636072> speed <25.208903> / animSpeed; 
			turn lleg to y-axis <-0.754344> speed <141.176087> / animSpeed; 
			turn lthigh to x-axis <34.803724> speed <628.679298> / animSpeed; 
			turn lthigh to z-axis <2.083108> speed <94.194319> / animSpeed; 
			turn lthigh to y-axis <1.815771> speed <27.944216> / animSpeed; 
			move pelvis to y-axis [-1.170000] speed [11.400000] / animSpeed; 
			turn pelvis to x-axis <5.899999> speed <39.937499> / animSpeed; 
			turn pelvis to y-axis <-7.999999> speed <119.999986> / animSpeed; 
			turn rfoot to x-axis <46.754711> speed <1233.631710> / animSpeed; 
			turn rfoot to z-axis <8.642268> speed <259.189607> / animSpeed; 
			turn rfoot to y-axis <-0.478550> speed <14.281834> / animSpeed; 
			turn rknee to x-axis <-17.301383> speed <574.312444> / animSpeed; 
			turn rknee to z-axis <-2.553244> speed <108.087247> / animSpeed; 
			turn rknee to y-axis <-1.395354> speed <14.769742> / animSpeed; 
			turn rleg to x-axis <-4.033013> speed <1542.375167> / animSpeed; 
			turn rleg to z-axis <-2.090712> speed <26.969858> / animSpeed; 
			turn rleg to y-axis <2.358406> speed <79.248967> / animSpeed; 
			turn rthigh to x-axis <-31.302282> speed <821.048127> / animSpeed; 
			turn rthigh to z-axis <-6.048236> speed <71.669576> / animSpeed; 
			turn rthigh to y-axis <1.835031> speed <107.522806> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:16
			turn launcher to x-axis <3.400000> speed <110.999991> / animSpeed; 
			turn lfoot to x-axis <-3.910388> speed <1133.937479> / animSpeed; 
			turn lknee to x-axis <25.256626> speed <395.785377> / animSpeed; 
			turn lknee to z-axis <-1.943760> speed <74.640670> / animSpeed; 
			turn lknee to y-axis <2.843982> speed <19.064674> / animSpeed; 
			turn lleg to x-axis <-33.895357> speed <1143.500171> / animSpeed; 
			turn lleg to z-axis <-0.878377> speed <45.433473> / animSpeed; 
			turn lleg to y-axis <-1.882219> speed <33.836252> / animSpeed; 
			turn lthigh to x-axis <8.944652> speed <775.772169> / animSpeed; 
			turn lthigh to z-axis <-2.168988> speed <127.562882> / animSpeed; 
			turn lthigh to y-axis <1.925600> speed <3.294864> / animSpeed; 
			move pelvis to y-axis [-0.390000] speed [23.399999] / animSpeed; 
			turn pelvis to x-axis <2.950000> speed <88.499984> / animSpeed; 
			turn pelvis to y-axis <-5.453124> speed <76.406240> / animSpeed; 
			turn rfoot to x-axis <3.958173> speed <1283.896135> / animSpeed; 
			turn rfoot to z-axis <6.352542> speed <68.691797> / animSpeed; 
			turn rfoot to y-axis <2.455468> speed <88.020537> / animSpeed; 
			turn rknee to x-axis <0.377261> speed <530.359321> / animSpeed; 
			turn rknee to z-axis <-2.164658> speed <11.657583> / animSpeed; 
			turn rknee to y-axis <-0.058077> speed <40.118300> / animSpeed; 
			turn rleg to x-axis <-5.276465> speed <37.303552> / animSpeed; 
			turn rleg to z-axis <-1.611442> speed <14.378110> / animSpeed; 
			turn rleg to y-axis <2.467168> speed <3.262835> / animSpeed; 
			turn rthigh to x-axis <-3.497283> speed <834.149981> / animSpeed; 
			turn rthigh to z-axis <-3.824450> speed <66.713600> / animSpeed; 
			turn rthigh to y-axis <1.625487> speed <6.286304> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:20
			turn launcher to x-axis <0.100000> speed <98.999991> / animSpeed; 
			turn lfoot to x-axis <38.552084> speed <1273.874173> / animSpeed; 
			turn lknee to x-axis <-3.971019> speed <876.829355> / animSpeed; 
			turn lknee to z-axis <1.007743> speed <88.545099> / animSpeed; 
			turn lknee to y-axis <0.243404> speed <78.017357> / animSpeed; 
			turn lleg to x-axis <-18.737617> speed <454.732207> / animSpeed; 
			turn lleg to z-axis <0.901724> speed <53.403025> / animSpeed; 
			turn lleg to y-axis <-1.555921> speed <9.788949> / animSpeed; 
			turn lthigh to x-axis <-28.531841> speed <1124.294797> / animSpeed; 
			turn lthigh to z-axis <1.384001> speed <106.589691> / animSpeed; 
			turn lthigh to y-axis <-1.972103> speed <116.931095> / animSpeed; 
			move pelvis to y-axis [0.000000] speed [11.700000] / animSpeed; 
			turn pelvis to x-axis <-0.000000> speed <88.499997> / animSpeed; 
			turn pelvis to y-axis <0.000000> speed <163.593733> / animSpeed; 
			turn rfoot to x-axis <-45.601082> speed <1486.777649> / animSpeed; 
			turn rfoot to z-axis <8.777723> speed <72.755435> / animSpeed; 
			turn rfoot to y-axis <2.942875> speed <14.622197> / animSpeed; 
			turn rknee to x-axis <-16.417879> speed <503.854208> / animSpeed; 
			turn rknee to z-axis <-0.843632> speed <39.630789> / animSpeed; 
			turn rknee to y-axis <-0.998536> speed <28.213757> / animSpeed; 
			turn rleg to x-axis <32.206094> speed <1124.476766> / animSpeed; 
			turn rleg to z-axis <-1.124071> speed <14.621108> / animSpeed; 
			turn rleg to y-axis <0.868008> speed <47.974791> / animSpeed; 
			turn rthigh to x-axis <29.055020> speed <976.569094> / animSpeed; 
			turn rthigh to z-axis <-6.649346> speed <84.746900> / animSpeed; 
			turn rthigh to y-axis <1.053705> speed <17.153451> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:24
			turn launcher to x-axis <-3.700000> speed <113.999996> / animSpeed; 
			turn lfoot to x-axis <5.205345> speed <1000.402167> / animSpeed; 
			turn lknee to x-axis <-38.112097> speed <1024.232325> / animSpeed; 
			turn lknee to z-axis <0.216327> speed <23.742493> / animSpeed; 
			turn lknee to y-axis <0.622121> speed <11.361511> / animSpeed; 
			turn lleg to x-axis <49.611448> speed <2050.471932> / animSpeed; 
			turn lleg to z-axis <1.523417> speed <18.650803> / animSpeed; 
			turn lleg to y-axis <-3.307911> speed <52.559711> / animSpeed; 
			turn lthigh to x-axis <-57.073149> speed <856.239242> / animSpeed; 
			turn lthigh to z-axis <6.331428> speed <148.422805> / animSpeed; 
			turn lthigh to y-axis <-3.703102> speed <51.929975> / animSpeed; 
			move pelvis to y-axis [-0.790000] speed [23.699999] / animSpeed; 
			turn pelvis to x-axis <3.300000> speed <98.999991> / animSpeed; 
			turn pelvis to y-axis <5.203125> speed <156.093737> / animSpeed; 
			turn rfoot to x-axis <-40.266223> speed <160.045778> / animSpeed; 
			turn rfoot to z-axis <3.971081> speed <144.199270> / animSpeed; 
			turn rfoot to y-axis <0.879173> speed <61.911060> / animSpeed; 
			turn rknee to x-axis <-32.900280> speed <494.472023> / animSpeed; 
			turn rknee to z-axis <-0.960615> speed <3.509498> / animSpeed; 
			turn rknee to y-axis <0.006480> speed <30.150478> / animSpeed; 
			turn rleg to x-axis <53.119928> speed <627.415030> / animSpeed; 
			turn rleg to z-axis <-1.445631> speed <9.646799> / animSpeed; 
			turn rleg to y-axis <-3.438915> speed <129.207697> / animSpeed; 
			turn rthigh to x-axis <58.790218> speed <892.055934> / animSpeed; 
			turn rthigh to z-axis <-7.135672> speed <14.589771> / animSpeed; 
			turn rthigh to y-axis <0.135399> speed <27.549188> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:28
			turn launcher to x-axis <7.299999> speed <329.999975> / animSpeed; 
			turn lfoot to x-axis <47.099178> speed <1256.814981> / animSpeed; 
			turn lfoot to z-axis <-8.698515> speed <260.859201> / animSpeed; 
			turn lfoot to y-axis <0.555569> speed <16.591946> / animSpeed; 
			turn lknee to x-axis <-17.403226> speed <621.266118> / animSpeed; 
			turn lknee to z-axis <2.513023> speed <68.900890> / animSpeed; 
			turn lknee to y-axis <0.972606> speed <10.514551> / animSpeed; 
			turn lleg to x-axis <-3.677333> speed <1598.663435> / animSpeed; 
			turn lleg to z-axis <1.837094> speed <9.410316> / animSpeed; 
			turn lleg to y-axis <-2.029812> speed <38.342974> / animSpeed; 
			turn lthigh to x-axis <-31.879980> speed <755.795095> / animSpeed; 
			turn lthigh to z-axis <5.894636> speed <13.103769> / animSpeed; 
			turn lthigh to y-axis <-1.828539> speed <56.236900> / animSpeed; 
			move pelvis to y-axis [-1.170000] speed [11.400000] / animSpeed; 
			turn pelvis to x-axis <6.599999> speed <98.999991> / animSpeed; 
			turn pelvis to y-axis <7.499999> speed <68.906244> / animSpeed; 
			turn rfoot to x-axis <-40.971177> speed <21.148622> / animSpeed; 
			turn rfoot to z-axis <0.001255> speed <119.094757> / animSpeed; 
			turn rfoot to y-axis <0.002255> speed <26.307519> / animSpeed; 
			turn rknee to x-axis <11.970984> speed <1346.137924> / animSpeed; 
			turn rknee to z-axis <-0.705707> speed <7.647249> / animSpeed; 
			turn rknee to y-axis <-1.833327> speed <55.194210> / animSpeed; 
			turn rleg to x-axis <4.420822> speed <1460.973186> / animSpeed; 
			turn rleg to z-axis <-0.618065> speed <24.826988> / animSpeed; 
			turn rleg to y-axis <0.373843> speed <114.382761> / animSpeed; 
			turn rthigh to x-axis <34.048664> speed <742.246629> / animSpeed; 
			turn rthigh to z-axis <-2.085847> speed <151.494738> / animSpeed; 
			turn rthigh to y-axis <-1.948095> speed <62.504826> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:32
			turn launcher to x-axis <3.000000> speed <128.999994> / animSpeed; 
			turn lfoot to x-axis <3.635010> speed <1303.925050> / animSpeed; 
			turn lfoot to z-axis <-6.350171> speed <70.450323> / animSpeed; 
			turn lfoot to y-axis <-2.491368> speed <91.408108> / animSpeed; 
			turn lknee to x-axis <0.643623> speed <541.405473> / animSpeed; 
			turn lknee to z-axis <1.906281> speed <18.202251> / animSpeed; 
			turn lknee to y-axis <0.014545> speed <28.741805> / animSpeed; 
			turn lleg to x-axis <-5.504502> speed <54.815073> / animSpeed; 
			turn lleg to z-axis <1.555275> speed <8.454562> / animSpeed; 
			turn lleg to y-axis <-2.302874> speed <8.191873> / animSpeed; 
			turn lthigh to x-axis <-3.177525> speed <861.073633> / animSpeed; 
			turn lthigh to z-axis <3.505405> speed <71.676934> / animSpeed; 
			turn lthigh to y-axis <-1.514817> speed <9.411657> / animSpeed; 
			move pelvis to y-axis [-0.390000] speed [23.399999] / animSpeed; 
			turn pelvis to x-axis <3.299998> speed <99.000036> / animSpeed; 
			turn pelvis to y-axis <3.749998> speed <112.500029> / animSpeed; 
			turn rfoot to x-axis <-2.631426> speed <1150.192505> / animSpeed; 
			turn rknee to x-axis <25.001153> speed <390.905062> / animSpeed; 
			turn rknee to z-axis <0.615286> speed <39.629771> / animSpeed; 
			turn rknee to y-axis <-1.938775> speed <3.163436> / animSpeed; 
			turn rleg to x-axis <-33.503249> speed <1137.722138> / animSpeed; 
			turn rleg to z-axis <1.376570> speed <59.839061> / animSpeed; 
			turn rleg to y-axis <2.130256> speed <52.692376> / animSpeed; 
			turn rthigh to x-axis <7.130223> speed <807.553231> / animSpeed; 
			turn rthigh to z-axis <1.907536> speed <119.801490> / animSpeed; 
			turn rthigh to y-axis <-1.582810> speed <10.958560> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:36
			turn launcher to x-axis <-0.000000> speed <89.999990> / animSpeed; 
			turn lfoot to x-axis <-45.174461> speed <1464.284129> / animSpeed; 
			turn lfoot to z-axis <-8.711228> speed <70.831730> / animSpeed; 
			turn lfoot to y-axis <-2.849490> speed <10.743672> / animSpeed; 
			turn lknee to x-axis <-15.469228> speed <483.385509> / animSpeed; 
			turn lknee to z-axis <1.487861> speed <12.552627> / animSpeed; 
			turn lknee to y-axis <1.188732> speed <35.225604> / animSpeed; 
			turn lleg to x-axis <31.992186> speed <1124.900652> / animSpeed; 
			turn lleg to z-axis <0.432714> speed <33.676850> / animSpeed; 
			turn lleg to y-axis <-0.824043> speed <44.364927> / animSpeed; 
			turn lthigh to x-axis <28.463688> speed <949.236400> / animSpeed; 
			turn lthigh to z-axis <6.414564> speed <87.274763> / animSpeed; 
			turn lthigh to y-axis <-1.128280> speed <11.596121> / animSpeed; 
			move pelvis to y-axis [0.000000] speed [11.700000] / animSpeed; 
			turn pelvis to x-axis <-0.000000> speed <98.999946> / animSpeed; 
			turn pelvis to y-axis <0.000000> speed <112.499952> / animSpeed; 
			turn rfoot to x-axis <38.366183> speed <1229.928296> / animSpeed; 
			turn rknee to x-axis <-3.925581> speed <867.802018> / animSpeed; 
			turn rknee to z-axis <-1.245253> speed <55.816170> / animSpeed; 
			turn rknee to y-axis <-0.489125> speed <43.489496> / animSpeed; 
			turn rleg to x-axis <-19.001783> speed <435.043999> / animSpeed; 
			turn rleg to z-axis <-0.676431> speed <61.590037> / animSpeed; 
			turn rleg to y-axis <1.782341> speed <10.437450> / animSpeed; 
			turn rthigh to x-axis <-28.687180> speed <1074.522095> / animSpeed; 
			turn rthigh to z-axis <-1.260733> speed <95.048062> / animSpeed; 
			turn rthigh to y-axis <2.034586> speed <108.521855> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
	}
}
// Call this from MotionControl()!
StopWalking() {
	move pelvis to y-axis [0.000000] speed [5.925000];
	turn launcher to x-axis <5.899999> speed <82.499994>;
	turn lfoot to x-axis <-0.511674> speed <366.071032>;
	turn lfoot to y-axis <-0.309917> speed <22.852027>;
	turn lfoot to z-axis <10.877619> speed <146.916357>;
	turn lknee to x-axis <-0.719968> speed <314.694309>;
	turn lknee to y-axis <-0.176804> speed <19.504339>;
	turn lknee to z-axis <-2.895248> speed <32.873313>;
	turn lleg to x-axis <4.602746> speed <512.617983>;
	turn lleg to y-axis <4.217571> speed <37.812111>;
	turn lleg to z-axis <-2.496718> speed <21.970739>;
	turn lthigh to x-axis <2.243081> speed <281.073699>;
	turn lthigh to y-axis <2.993269> speed <30.911615>;
	turn lthigh to z-axis <-6.354488> speed <95.767889>;
	turn pelvis to x-axis <-4.999999> speed <37.499996>;
	turn pelvis to y-axis <0.000000> speed <40.898433>;
	turn rfoot to x-axis <0.932360> speed <371.694412>;
	turn rfoot to y-axis <0.474851> speed <22.005134>;
	turn rfoot to z-axis <-10.296852> speed <64.797402>;
	turn rknee to x-axis <-0.710460> speed <336.534481>;
	turn rknee to y-axis <0.215404> speed <13.798553>;
	turn rknee to z-axis <2.955248> speed <32.697332>;
	turn rleg to x-axis <3.792608> speed <499.034427>;
	turn rleg to y-axis <-3.940970> speed <43.842553>;
	turn rleg to z-axis <2.397633> speed <24.118619>;
	turn rthigh to x-axis <1.740186> speed <268.630524>;
	turn rthigh to y-axis <-2.752263> speed <35.905934>;
	turn rthigh to z-axis <6.095458> speed <56.466328>;
}
UnitSpeed(){
 maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
 animFramesPerKeyframe = 5; //we need to calc the frames per keyframe value, from the known animtime
 maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
 while(TRUE){
  animSpeed = (get CURRENT_SPEED);
  if (animSpeed<1) animSpeed=1;
  animSpeed = (maxSpeed * 5) / animSpeed; 
  //get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed);
  if (animSpeed<2) animSpeed=2;
  if (animspeed>8) animSpeed = 8;
  sleep 131;
 }
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script UnitSpeed();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from aimy1;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}
HitByWeapon(anglex, anglez)
{
	turn aimy1 to z-axis anglez speed <105.000000>;
	turn aimy1 to x-axis <0> - anglex speed <105.000000>;
	wait-for-turn aimy1 around z-axis;
	wait-for-turn aimy1 around x-axis;
	turn aimy1 to z-axis <0.000000> speed <30.000000>;
	turn aimy1 to x-axis <0.000000> speed <30.000000>;
}
StartMoving()
{
	signal SIG_MOVE;
	bMoving = 1;
	call-script walk();
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	sleep 120;
	notMoving = TRUE;
	bMoving = 0;
	signal SIG_WALK;
	start-script StopWalking();
}

Create()
{
	gun_1 = aimy1;
	notMoving = TRUE;
	currentSpeed = 100;
	moveSpeed = get MAX_SPEED;
	animSpeed = 4;
	hide lfirept;
	hide rfirept;
	start-script StopMoving();
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = aimy1;
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = rfirept + gun_1;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	turn aimy1 to y-axis <0.000000> speed <90.021978>;
	turn launcher to x-axis <0.000000> speed <45.010989>;
	wpn1_lasthead = 1000000;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	set-signal-mask SIG_AIM;
	sleep 5000;
	start-script ExecuteRestoreAfterDelay();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	turn aimy1 to y-axis heading speed <90.021978>;
	turn launcher to x-axis <0.000000> - pitch speed <45.010989>;
	if (((get ABS(wpn1_lasthead - heading)) > 65536) OR(((get ABS(wpn1_lasthead - heading)) > 1300) AND ((get ABS(wpn1_lasthead - heading)) < 64236)))
	{
		wpn1_lasthead = 1000000;
		wait-for-turn aimy1 around y-axis;
		wait-for-turn launcher around x-axis;
	}
	wpn1_lasthead = heading;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 )
	{
		emit-sfx UNIT_SFX0 from rexhaust;
	}
	else
	{
		emit-sfx UNIT_SFX0 from lexhaust;
	}
	gun_1 = !gun_1;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode pelvis type BITMAPONLY | NOHEATCLOUD;
		explode aimy1 type BITMAPONLY | NOHEATCLOUD;
		//explode turret type BITMAPONLY | NOHEATCLOUD;
		//explode launcher type BITMAPONLY | NOHEATCLOUD;
		//explode rfirept type BITMAPONLY | NOHEATCLOUD;
		//explode lfirept type BITMAPONLY | NOHEATCLOUD;
		//explode lexhaust type BITMAPONLY | NOHEATCLOUD;
		//explode rexhaust type BITMAPONLY | NOHEATCLOUD;
		//explode lthigh type BITMAPONLY | NOHEATCLOUD;
		//explode lknee type BITMAPONLY | NOHEATCLOUD;
		//explode lleg type BITMAPONLY | NOHEATCLOUD;
		//explode lfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rthigh type BITMAPONLY | NOHEATCLOUD;
		//explode rknee type BITMAPONLY | NOHEATCLOUD;
		//explode rleg type BITMAPONLY | NOHEATCLOUD;
		explode rfoot type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode pelvis type FALL | NOHEATCLOUD;
		explode aimy1 type FALL | NOHEATCLOUD;
		explode turret type FALL | NOHEATCLOUD;
		explode launcher type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rfirept type FALL | NOHEATCLOUD;
		//explode lfirept type FALL | NOHEATCLOUD;
		//explode lexhaust type FALL | NOHEATCLOUD;
		//explode rexhaust type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lthigh type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lknee type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lleg type FALL | NOHEATCLOUD;
		explode lfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rthigh type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rknee type FALL | NOHEATCLOUD;
		explode rleg type FALL | NOHEATCLOUD;
		explode rfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode pelvis type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode aimy1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode launcher type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rfirept type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		//explode lfirept type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lexhaust type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rexhaust type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		//explode lthigh type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		//explode lknee type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rknee type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode rleg type SMOKE | FALL | NOHEATCLOUD;
		explode rfoot type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode pelvis type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode aimy1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode launcher type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode rfirept type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode lfirept type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode lexhaust type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode rexhaust type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode lthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lknee type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rknee type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}


#include "exptype.h"

piece  base, spinner, emit;

static-var  resourceRate, statechg_DesiredState, statechg_StateChanging;

// Signal definitions
#define SIGNAL_TURNON 4


Go()
{
	spin spinner around y-axis speed resourceRate accelerate 90;
}

Stop()
{
	stop-spin spinner around y-axis decelerate 180;
	wait-for-turn spinner around y-axis;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	hide emit;
	resourceRate = 0;
	call-script InitState();
}

Activate()
{
	start-script RequestState(0);
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	while( TRUE )
	{
		emit-sfx 259 from emit;
		sleep 250;
	}
}

Deactivate()
{
	start-script RequestState(1);
	signal SIGNAL_TURNON;
}



SetSpeed(windOrMetal)
{
	resourceRate = windOrMetal * 20;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode spinner type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode emit type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode spinner type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode emit type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode spinner type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode emit type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode spinner type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode emit type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}

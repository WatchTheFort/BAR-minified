
#include "../recoil_common_includes.h"

piece  base, flare, turret, sleeve, barrel1, barrel2, barrel3, barrel4;

static-var  restore_delay, isAiming, wpn1_lasthead;

// Signal definitions
#define SIGNAL_AIM1 256



RockUnit(anglex, anglez)
{
	turn base to x-axis anglex speed <50.005495>;
	turn base to z-axis <0> - anglez speed <50.005495>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.0> speed <20.0>;
	turn base to x-axis <0.0> speed <20.0>;
	return (0);
}



#define BASEPIECE base
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 4
#define MAXTILT 100

Create()
{
	hide flare;
	restore_delay = 3000;
	isAiming = 0;
	return (0);
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 2;
	return (0);
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	turn turret to y-axis <0.0> speed <50.005495>;
	turn sleeve to x-axis <0.0> speed <50.005495>;
	wpn1_lasthead = 1000000;
	isAiming = 0;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	set-signal-mask SIGNAL_AIM1;
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

AimWeapon1(heading, pitch)
{
	isAiming = TRUE;
	signal SIGNAL_AIM1;
	turn turret to y-axis heading speed <90>;
	turn sleeve to x-axis <0.0> - pitch speed <90>;
	if (((get ABS(wpn1_lasthead - heading)) > 65536) OR(((get ABS(wpn1_lasthead - heading)) > <2>) AND ((get ABS(wpn1_lasthead - heading)) < 65536 - <2>)))
	{
		wpn1_lasthead = 1000000;
		wait-for-turn turret around y-axis;
		wait-for-turn sleeve around x-axis;
	}
	wpn1_lasthead = heading;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
 	emit-sfx 1024 + 0 from flare;
 	move barrel1 to z-axis [-3.0] speed [500.0];
	move barrel2 to z-axis [-3.0] speed [500.0];
	move barrel3 to z-axis [-3.0] speed [500.0];
	move barrel4 to z-axis [-3.0] speed [500.0];
 	wait-for-move barrel1 along z-axis;
 	move barrel1 to z-axis [0.0] speed [3.0];	
 	move barrel2 to z-axis [0.0] speed [3.0];	
	move barrel3 to z-axis [0.0] speed [3.0];	
 	move barrel4 to z-axis [0.0] speed [3.0];	
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = flare;
	//return (0);
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare;
	//return (0);
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode sleeve type BITMAPONLY | NOHEATCLOUD;
		explode barrel1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve type FALL | NOHEATCLOUD;
		explode barrel1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode barrel1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}

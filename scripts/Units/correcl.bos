
#include "exptype.h"

piece  base, wake1, wake2, nano1, nano2;

static-var  buildHeading, nano;

// Signal definitions
#define SIGNAL_MOVE 1

#define BASEPIECE base
#define HITSPEED <25.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 5
#define MAXTILT 100

#define SMOKETHRESHOLD 0
#include "unit_hitbyweaponid_and_smoke.h"

StartMoving()
{
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;
	while( TRUE )
	{
		emit-sfx 256 | 3 from wake1;
		emit-sfx 256 | 3 from wake2;
		sleep 250;
	}
}

StopMoving()
{
	signal SIGNAL_MOVE;
}


Create()
{
	hide nano1;
	hide nano2;
	hide wake1;
	hide wake2;
	nano=0;
	buildHeading = 0;
}

Activate()
{
	set INBUILDSTANCE to 1;
}

Deactivate()
{
	set INBUILDSTANCE to 0;
}

StartBuilding(heading)
{
	show nano1;
	show nano2;
	buildHeading = heading;
}

StopBuilding()
{
	hide nano1;
	hide nano2;
}

QueryNanoPiece(pieceIndex)
{
	
	pieceIndex = nano1+nano;
	nano = !nano;
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		//explode wake2 type BITMAPONLY | NOHEATCLOUD;
		explode nano1 type BITMAPONLY | NOHEATCLOUD;
		explode nano2 type BITMAPONLY | NOHEATCLOUD;
		//explode wake1 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		//explode wake2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type FIRE | SMOKE | NOHEATCLOUD;
		explode nano2 type NOHEATCLOUD;
		//explode wake1 type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		//explode wake2 type SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type SMOKE | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | SMOKE | NOHEATCLOUD;
		//explode wake1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		//explode wake2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano1 type EXPLODE_ON_HIT | FIRE | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | FIRE | NOHEATCLOUD;
		//explode wake1 type EXPLODE_ON_HIT | FIRE | NOHEATCLOUD;
	return corpsetype;
}

#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SIG_BUILD		4	

//piece  pelvis, lthigh, rthigh, torso, rleg, rfoot, lleg, lfoot,
//       luparm, ruparm, rnano, lnano;

piece	pelvis, head, rhip, rleg, rfoot, lhip, lleg, lfoot, nano, aimy1; 

static-var  bMoving, notBuilding, nanoNozzle, currentSpeed,	statechg_DesiredState,
			statechg_StateChanging, animSpeed, maxSpeed, animFramesPerKeyframe;

#define SIG_WALK 4
Walk() {//Created by https://github.com/Beherith/Skeletor_S3O from C:\Users\ptasz\Documents\GitHub\support\Animation_sources\armrectr_anim_walk.blend 
	//set-signal-mask SIG_WALK;
	if (bMoving) { //Frame:4
			turn head to x-axis <-3.000000> speed <90.000009> / animSpeed; //delta=3.00 
			turn lfoot to x-axis <-17.579662> speed <527.389800> / animSpeed; //delta=17.58 
			turn lhip to x-axis <-1.313085> speed <39.392648> / animSpeed; //delta=1.31 
			turn lleg to x-axis <21.121725> speed <633.651822> / animSpeed; //delta=-21.12 
			turn lleg to z-axis <0.235737> speed <7.072109> / animSpeed; //delta=-0.24 
			move pelvis to z-axis [1.699118] speed [50.973555] / animSpeed; //delta=1.70 
			move pelvis to y-axis [2.000000] speed [60.000000] / animSpeed; //delta=2.00 
			turn rfoot to x-axis <6.535332> speed <196.060012> / animSpeed; //delta=-6.54 
			turn rhip to x-axis <-41.589753> speed <1247.692676> / animSpeed; //delta=41.59 
			turn rhip to z-axis <-0.393109> speed <11.793276> / animSpeed; //delta=0.39 
			turn rhip to y-axis <-0.388975> speed <11.669262> / animSpeed; //delta=-0.39 
			turn rleg to x-axis <-8.919102> speed <267.572976> / animSpeed; //delta=8.92 
		sleep ((33*animSpeed) -1);
	}
	while(bMoving) {
		if (bMoving) { //Frame:7
			turn head to x-axis <-1.295845> speed <51.124667> / animSpeed; //delta=-1.70 
			turn head to y-axis <-2.972861> speed <89.185835> / animSpeed; //delta=-2.97 
			turn lfoot to x-axis <-58.734866> speed <1234.656123> / animSpeed; //delta=41.16 
			turn lhip to x-axis <2.275526> speed <107.658332> / animSpeed; //delta=-3.59 
			turn lhip to z-axis <-0.291656> speed <7.507988> / animSpeed; //delta=0.25 
			turn lhip to y-axis <-0.163132> speed <4.946817> / animSpeed; //delta=-0.16 
			turn lleg to x-axis <55.778825> speed <1039.713013> / animSpeed; //delta=-34.66 
			turn lleg to z-axis <1.422821> speed <35.612534> / animSpeed; //delta=-1.19 
			turn lleg to y-axis <-0.734330> speed <23.719410> / animSpeed; //delta=-0.79 
			move pelvis to z-axis [1.510523] speed [5.657852] / animSpeed; //delta=-0.19 
			move pelvis to y-axis [1.777778] speed [6.666670] / animSpeed; //delta=-0.22 
			turn pelvis to x-axis <4.556168> speed <136.685033> / animSpeed; //delta=-4.56 
			turn rfoot to x-axis <30.180980> speed <709.369462> / animSpeed; //delta=-23.65 
			turn rhip to x-axis <-71.746882> speed <904.713880> / animSpeed; //delta=30.16 
			turn rhip to z-axis <-1.315110> speed <27.660022> / animSpeed; //delta=0.92 
			turn rhip to y-axis <-1.379971> speed <29.729881> / animSpeed; //delta=-0.99 
			turn rleg to x-axis <31.923584> speed <1225.280561> / animSpeed; //delta=-40.84 
			turn rleg to z-axis <0.180211> speed <7.072193> / animSpeed; //delta=-0.24 
			turn rleg to y-axis <0.050441> speed <3.071866> / animSpeed; //delta=0.10 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:10
			turn head to x-axis <6.000000> speed <218.875347> / animSpeed; //delta=-7.30 
			turn head to y-axis <-6.191199> speed <96.550133> / animSpeed; //delta=-3.22 
			turn lfoot to x-axis <-13.840104> speed <1346.842877> / animSpeed; //delta=-44.89 
			turn lhip to x-axis <24.276116> speed <660.017706> / animSpeed; //delta=-22.00 
			turn lhip to z-axis <-0.043482> speed <7.445204> / animSpeed; //delta=-0.25 
			turn lleg to x-axis <47.582516> speed <245.889269> / animSpeed; //delta=8.20 
			turn lleg to z-axis <0.336284> speed <32.596126> / animSpeed; //delta=1.09 
			turn lleg to y-axis <-0.260962> speed <14.201029> / animSpeed; //delta=0.47 
			move pelvis to z-axis [1.321928] speed [5.657852] / animSpeed; //delta=-0.19 
			move pelvis to y-axis [1.555555] speed [6.666666] / animSpeed; //delta=-0.22 
			turn pelvis to x-axis <9.112336> speed <136.685033> / animSpeed; //delta=-4.56 
			turn rfoot to x-axis <6.901872> speed <698.373238> / animSpeed; //delta=23.28 
			turn rhip to x-axis <-80.559950> speed <264.392047> / animSpeed; //delta=8.81 
			turn rhip to z-axis <-1.911518> speed <17.892251> / animSpeed; //delta=0.60 
			turn rhip to y-axis <-1.813831> speed <13.015781> / animSpeed; //delta=-0.43 
			turn rleg to x-axis <62.706758> speed <923.495227> / animSpeed; //delta=-30.78 
			turn rleg to z-axis <0.791830> speed <18.348574> / animSpeed; //delta=-0.61 
			turn rleg to y-axis <-0.515267> speed <16.971234> / animSpeed; //delta=-0.57 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:13
			turn head to x-axis <1.500000> speed <135.000010> / animSpeed; //delta=4.50 
			turn head to y-axis <-3.095599> speed <92.867990> / animSpeed; //delta=3.10 
			turn lfoot to x-axis <-34.307340> speed <614.017093> / animSpeed; //delta=20.47 
			turn lhip to x-axis <26.787498> speed <75.341460> / animSpeed; //delta=-2.51 
			turn lleg to x-axis <-17.927800> speed <1965.309496> / animSpeed; //delta=65.51 
			turn lleg to z-axis <0.470545> speed <4.027834> / animSpeed; //delta=-0.13 
			turn lleg to y-axis <0.139089> speed <12.001541> / animSpeed; //delta=0.40 
			move pelvis to z-axis [1.133333] speed [5.657852] / animSpeed; //delta=-0.19 
			move pelvis to y-axis [1.333333] speed [6.666666] / animSpeed; //delta=-0.22 
			turn pelvis to x-axis <4.556168> speed <136.685033> / animSpeed; //delta=4.56 
			turn rfoot to x-axis <13.240575> speed <190.161085> / animSpeed; //delta=-6.34 
			turn rhip to x-axis <-40.410466> speed <1204.484531> / animSpeed; //delta=-40.15 
			turn rhip to z-axis <-0.234868> speed <50.299514> / animSpeed; //delta=-1.68 
			turn rhip to y-axis <-0.178150> speed <49.070437> / animSpeed; //delta=1.64 
			turn rleg to x-axis <22.555638> speed <1204.533606> / animSpeed; //delta=40.15 
			turn rleg to z-axis <0.243093> speed <16.462127> / animSpeed; //delta=0.55 
			turn rleg to y-axis <-0.050434> speed <13.944980> / animSpeed; //delta=0.46 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:16
			turn head to x-axis <-3.000000> speed <135.000004> / animSpeed; //delta=4.50 
			turn head to y-axis <-0.000000> speed <92.867978> / animSpeed; //delta=3.10 
			turn lfoot to x-axis <6.821116> speed <1233.853687> / animSpeed; //delta=-41.13 
			turn lhip to x-axis <-42.082308> speed <2066.094197> / animSpeed; //delta=68.87 
			turn lhip to z-axis <0.399687> speed <12.481446> / animSpeed; //delta=-0.42 
			turn lhip to y-axis <0.396465> speed <18.330089> / animSpeed; //delta=0.61 
			turn lleg to x-axis <-8.529861> speed <281.938171> / animSpeed; //delta=-9.40 
			turn lleg to z-axis <0.052684> speed <12.535836> / animSpeed; //delta=0.42 
			move pelvis to z-axis [1.600000] speed [14.000001] / animSpeed; //delta=0.47 
			move pelvis to y-axis [2.000000] speed [20.000002] / animSpeed; //delta=0.67 
			turn pelvis to x-axis <-0.000000> speed <136.685033> / animSpeed; //delta=4.56 
			turn rfoot to x-axis <-17.470241> speed <921.324482> / animSpeed; //delta=30.71 
			turn rhip to x-axis <-1.674077> speed <1162.091663> / animSpeed; //delta=-38.74 
			turn rhip to z-axis <0.002708> speed <7.127289> / animSpeed; //delta=-0.24 
			turn rhip to y-axis <-0.008641> speed <5.085268> / animSpeed; //delta=0.17 
			turn rleg to x-axis <21.128593> speed <42.811353> / animSpeed; //delta=1.43 
			turn rleg to z-axis <-0.142773> speed <11.575982> / animSpeed; //delta=0.39 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:19
			turn head to x-axis <-0.682153> speed <69.535415> / animSpeed; //delta=-2.32 
			turn head to y-axis <2.911492> speed <87.344764> / animSpeed; //delta=2.91 
			turn lfoot to x-axis <30.658100> speed <715.109511> / animSpeed; //delta=-23.84 
			turn lhip to x-axis <-73.724031> speed <949.251665> / animSpeed; //delta=31.64 
			turn lhip to z-axis <1.522635> speed <33.688441> / animSpeed; //delta=-1.12 
			turn lhip to y-axis <1.585830> speed <35.680966> / animSpeed; //delta=1.19 
			turn lleg to x-axis <32.274399> speed <1224.127813> / animSpeed; //delta=-40.80 
			turn lleg to z-axis <-0.180164> speed <6.985449> / animSpeed; //delta=0.23 
			turn lleg to y-axis <-0.052811> speed <3.093521> / animSpeed; //delta=-0.10 
			move pelvis to z-axis [1.133333] speed [14.000001] / animSpeed; //delta=-0.47 
			move pelvis to y-axis [1.333333] speed [20.000002] / animSpeed; //delta=-0.67 
			turn pelvis to x-axis <4.693752> speed <140.812563> / animSpeed; //delta=-4.69 
			turn rfoot to x-axis <-61.915057> speed <1333.344485> / animSpeed; //delta=44.44 
			turn rhip to x-axis <2.611454> speed <128.565924> / animSpeed; //delta=-4.29 
			turn rhip to z-axis <0.295271> speed <8.776863> / animSpeed; //delta=-0.29 
			turn rhip to y-axis <0.162997> speed <5.149130> / animSpeed; //delta=0.17 
			turn rleg to x-axis <52.794162> speed <949.967094> / animSpeed; //delta=-31.67 
			turn rleg to z-axis <-1.405652> speed <37.886364> / animSpeed; //delta=1.26 
			turn rleg to y-axis <0.679486> speed <22.604256> / animSpeed; //delta=0.75 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:22
			turn head to x-axis <5.999999> speed <200.464574> / animSpeed; //delta=-6.68 
			turn head to y-axis <5.761615> speed <85.503674> / animSpeed; //delta=2.85 
			turn lfoot to x-axis <6.361546> speed <728.896602> / animSpeed; //delta=24.30 
			turn lhip to x-axis <-82.708625> speed <269.537843> / animSpeed; //delta=8.98 
			turn lhip to z-axis <3.485438> speed <58.884106> / animSpeed; //delta=-1.96 
			turn lhip to y-axis <3.894661> speed <69.264915> / animSpeed; //delta=2.31 
			turn lleg to x-axis <61.349039> speed <872.239199> / animSpeed; //delta=-29.07 
			turn lleg to z-axis <0.533865> speed <21.420883> / animSpeed; //delta=-0.71 
			turn lleg to y-axis <0.234566> speed <8.621330> / animSpeed; //delta=0.29 
			move pelvis to z-axis [0.666667] speed [14.000001] / animSpeed; //delta=-0.47 
			move pelvis to y-axis [0.666667] speed [19.999999] / animSpeed; //delta=-0.67 
			turn pelvis to x-axis <9.387504> speed <140.812563> / animSpeed; //delta=-4.69 
			turn rfoot to x-axis <-19.475113> speed <1273.198317> / animSpeed; //delta=-42.44 
			turn rhip to x-axis <28.237944> speed <768.794695> / animSpeed; //delta=-25.63 
			turn rhip to z-axis <-0.035870> speed <9.934229> / animSpeed; //delta=0.33 
			turn rleg to x-axis <42.073470> speed <321.620767> / animSpeed; //delta=10.72 
			turn rleg to z-axis <-0.176777> speed <36.866244> / animSpeed; //delta=-1.23 
			turn rleg to y-axis <0.012731> speed <20.002626> / animSpeed; //delta=-0.67 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:25
			turn head to x-axis <1.500000> speed <134.999969> / animSpeed; //delta=4.50 
			turn head to y-axis <3.130808> speed <78.924204> / animSpeed; //delta=-2.63 
			turn lfoot to x-axis <13.001016> speed <199.184081> / animSpeed; //delta=-6.64 
			turn lhip to x-axis <-40.099429> speed <1278.275880> / animSpeed; //delta=-42.61 
			turn lhip to z-axis <0.184265> speed <99.035195> / animSpeed; //delta=3.30 
			turn lhip to y-axis <0.328593> speed <106.982034> / animSpeed; //delta=-3.57 
			turn lleg to x-axis <22.225027> speed <1173.720351> / animSpeed; //delta=39.12 
			turn lleg to z-axis <0.052056> speed <14.454271> / animSpeed; //delta=0.48 
			turn lleg to y-axis <-0.022789> speed <7.720646> / animSpeed; //delta=-0.26 
			move pelvis to z-axis [1.182893] speed [15.486778] / animSpeed; //delta=0.52 
			move pelvis to y-axis [1.333333] speed [19.999999] / animSpeed; //delta=0.67 
			turn pelvis to x-axis <4.693752> speed <140.812563> / animSpeed; //delta=4.69 
			turn rfoot to x-axis <-34.424177> speed <448.471928> / animSpeed; //delta=14.95 
			turn rhip to x-axis <27.204042> speed <31.017033> / animSpeed; //delta=1.03 
			turn rleg to x-axis <-17.874989> speed <1798.453781> / animSpeed; //delta=59.95 
			turn rleg to z-axis <-0.353565> speed <5.303618> / animSpeed; //delta=0.18 
			turn rleg to y-axis <-0.170529> speed <5.497813> / animSpeed; //delta=-0.18 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:28
			turn head to x-axis <-3.000000> speed <135.000020> / animSpeed; //delta=4.50 
			turn head to y-axis <-0.000000> speed <93.924234> / animSpeed; //delta=-3.13 
			turn lfoot to x-axis <-17.579662> speed <917.420337> / animSpeed; //delta=30.58 
			turn lhip to x-axis <-1.313085> speed <1163.590327> / animSpeed; //delta=-38.79 
			turn lhip to z-axis <-0.041390> speed <6.769649> / animSpeed; //delta=0.23 
			turn lhip to y-axis <0.001762> speed <9.804934> / animSpeed; //delta=-0.33 
			turn lleg to x-axis <21.121725> speed <33.099080> / animSpeed; //delta=1.10 
			turn lleg to z-axis <0.235737> speed <5.510430> / animSpeed; //delta=-0.18 
			move pelvis to z-axis [1.699118] speed [15.486778] / animSpeed; //delta=0.52 
			move pelvis to y-axis [2.000000] speed [20.000002] / animSpeed; //delta=0.67 
			turn pelvis to x-axis <-0.000000> speed <140.812563> / animSpeed; //delta=4.69 
			turn rfoot to x-axis <6.535332> speed <1228.785268> / animSpeed; //delta=-40.96 
			turn rhip to x-axis <-41.589753> speed <2063.813853> / animSpeed; //delta=68.79 
			turn rhip to z-axis <-0.393109> speed <9.177611> / animSpeed; //delta=0.31 
			turn rhip to y-axis <-0.388975> speed <17.788458> / animSpeed; //delta=-0.59 
			turn rleg to x-axis <-8.919102> speed <268.676624> / animSpeed; //delta=-8.96 
			turn rleg to z-axis <-0.055529> speed <8.941079> / animSpeed; //delta=-0.30 
			turn rleg to y-axis <-0.051955> speed <3.557226> / animSpeed; //delta=0.12 
		sleep ((33*animSpeed) -1);
		}
	}
}
// Call this from MotionControl()!
StopWalking() {
	move pelvis to y-axis [0.000000] speed [20.000000];
	move pelvis to z-axis [0.000000] speed [16.991185];
	turn head to x-axis <0.000000> speed <72.958449>;
	turn head to y-axis <0.000000> speed <32.183378>;
	turn lfoot to x-axis <0.000000> speed <448.947626>;
	turn lhip to x-axis <0.000000> speed <688.698066>;
	turn lhip to y-axis <0.000000> speed <35.660678>;
	turn lhip to z-axis <0.000000> speed <33.011732>;
	turn lleg to x-axis <0.000000> speed <655.103165>;
	turn lleg to y-axis <0.000000> speed <7.906470>;
	turn lleg to z-axis <0.000000> speed <11.870845>;
	turn pelvis to x-axis <0.000000> speed <46.937521>;
	turn rfoot to x-axis <0.000000> speed <444.448162>;
	turn rhip to x-axis <0.000000> speed <687.937951>;
	turn rhip to y-axis <0.000000> speed <16.356812>;
	turn rhip to z-axis <0.000000> speed <16.766505>;
	turn rleg to x-axis <0.000000> speed <599.484594>;
	turn rleg to y-axis <0.000000> speed <7.534752>;
	turn rleg to z-axis <0.000000> speed <12.628788>;
}
// REMEMBER TO animspeed = 3 in Create() !!
UnitSpeed(){
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = 3; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	while(TRUE){
		animSpeed = (get CURRENT_SPEED);
		if (animSpeed<1) animSpeed=1;
		animSpeed = (maxSpeed * 3) / animSpeed; 
		//get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed); //how to print debug info from bos
		if (animSpeed<1) animSpeed=1;
		if (animspeed>6) animSpeed = 6;
		sleep 98;
	}
}
StartMoving(){
	signal SIG_WALK;
	bMoving=TRUE;
	start-script Walk();
}
StopMoving(){
	\signal SIG_WALK;
	bMoving=FALSE;
	call-script StopWalking();
}


#define BASEPIECE pelvis
#define HITSPEED <75.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 100
HitByWeapon(anglex, anglez, damage)	// angle[x|z] is always [-500;500], damage is multiplied by 100
{
	var amount;//, speedz, speedx;
	amount = damage / (100 * UNITSIZE);
	if (amount < 3  ) return (0);
	if (amount > MAXTILT) amount = MAXTILT;
	//get PRINT(anglex, anglez, amount, damage);
	//speedz = HITSPEED * get ABS(anglez) / 500; //nevermind this, the random error this produces actually looks better than the accurate version
	turn BASEPIECE to z-axis (anglez * amount) / 100  speed HITSPEED;
	turn BASEPIECE to x-axis <0> - (anglex * amount) /100 speed HITSPEED;
	wait-for-turn BASEPIECE around z-axis;
	wait-for-turn BASEPIECE around x-axis;
	turn BASEPIECE to z-axis <0.000000> speed HITSPEED / 4;
	turn BASEPIECE to x-axis <0.000000> speed HITSPEED / 4;
}
HitByWeaponId(anglex, anglez, weaponid, dmg) //weaponID is always 0,lasers and flamers give angles of 0
{
	start-script HitByWeapon(dmg, anglez,anglex); //I dont know why param order must be switched, and this also runs a frame later :(
	return (100); //return damage percent
}



SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from head;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{

//	turn luparm to x-axis <0.010989> speed <160.000000>;
//	turn ruparm to x-axis <0.010989> speed <160.000000>;
}

Stop()

{	
	set-signal-mask SIG_BUILD;
	set INBUILDSTANCE to 0;
	turn head to y-axis <0.000000> speed <160.000000>;
//	turn luparm to x-axis <45.000000> speed <160.000000>;
//	turn ruparm to x-axis <45.000000> speed <160.000000>;
//	wait-for-turn head around y-axis;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState )
		{
			call-script Stop();
			notBuilding = 1;
			currentstate = 1;
		}
		else
		{
			call-script Go();
			notBuilding = 0;
			currentstate = 0;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	bMoving = FALSE;
	notBuilding = 1;
	animspeed = 3;
	nanoNozzle = 0;
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	animSpeed = 60;
	start-script SmokeUnit();
	//turn luparm to x-axis <45.010989> speed <45>;
//	turn ruparm to x-axis <45.010989> speed <45>;
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding(heading, pitch)
{
	start-script RequestState(0);
	while( notBuilding ) sleep 100;
	signal SIG_BUILD;
	turn head to y-axis heading speed <260.000000>;
	wait-for-turn head around y-axis;
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	signal SIG_BUILD;	
	set-signal-mask SIG_BUILD;
	sleep 1000;
	set-signal-mask 0;
	signal SIG_BUILD;	
	start-script RequestState(1);
}

SweetSpot(piecenum)
{
	piecenum = pelvis;
}

QueryNanoPiece(piecenum)
{
	piecenum = head + nanoNozzle;  //head was nano
	nanoNozzle = !nanoNozzle;
}

/*
TargetHeading(Func_Var_1)
{
	Static_Var_5 = 0 - Func_Var_1;
}
*/

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode pelvis type BITMAPONLY | NOHEATCLOUD;
		explode head type BITMAPONLY | NOHEATCLOUD;
		explode nano type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lhip type BITMAPONLY | NOHEATCLOUD;
		explode lleg type BITMAPONLY | NOHEATCLOUD;
		explode lfoot type BITMAPONLY | NOHEATCLOUD;
		explode rhip type BITMAPONLY | NOHEATCLOUD;
		explode rleg type BITMAPONLY | NOHEATCLOUD;
		explode rfoot type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode pelvis type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano type FALL | NOHEATCLOUD;
		explode lhip type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lleg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rhip type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rleg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode pelvis type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lhip type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lleg type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode lfoot type SMOKE | FALL | NOHEATCLOUD;
		explode rhip type SMOKE | FALL | NOHEATCLOUD;
		explode rleg type SMOKE | FALL | NOHEATCLOUD;
		explode rfoot type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode pelvis type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode nano type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode lhip type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode lleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lfoot type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode rhip type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode rleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}

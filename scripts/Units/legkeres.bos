
#include "exptype.h"

piece  base, turret, gun, sleeve, lgun, lgatling, rgun, rgatling, flare, lflare, rflare, smoke1, smoke2;

static-var  restore_delay, last_gun_heading;

// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_AIM2 512
#define SIGNAL_AIM3 1024
#define SIGNAL_SHOOT1 16
#define SIGNAL_SHOOT2 32

#define BASEPIECE base
#define HITSPEED <85.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 7
#define MAXTILT 100

StartMoving()
{
	turn base to x-axis <-3> speed <11>;
	wait-for-turn base around x-axis;
	turn base to x-axis <0> speed <11>;
}

StopMoving()
{
	turn base to x-axis <1> speed <5>;
	wait-for-turn base around x-axis;
	turn base to x-axis <0> speed <5>;
}

Create()
{
	hide flare;
	hide rflare;
	hide lflare;
	restore_delay = 3000;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	set-signal-mask 0;
	turn turret to y-axis <0.000000> speed <90.000000>;
	turn gun to x-axis <0.000000> speed <50.000000>;
	turn lgun to x-axis <0.000000> speed <50.000000>;
	turn rgun to x-axis <0.000000> speed <50.000000>;
	stop-spin lgatling around z-axis decelerate <10.000000>;
	stop-spin rgatling around z-axis decelerate <10.000000>;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	turn turret to y-axis heading speed <90.000000>;
	turn gun to x-axis <0.000000> - pitch speed <50.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn gun around x-axis;
	start-script RestoreAfterDelay();
	last_gun_heading = heading;
	return (1);
}

Rock_Main_Cannon()
{
	turn base to z-axis <0> - (GET KSIN(last_gun_heading)) speed <50.005495>;
	turn base to x-axis <0> - (GET KCOS(last_gun_heading)) speed <50.005495>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <20.000000>;
	turn base to x-axis <0.000000> speed <20.000000>;
}

FireWeapon1()
{
	emit-sfx 1024 + 0 from flare;
	start-script Rock_Main_Cannon();
	move sleeve to z-axis [-2.400000] speed [500.000000];
	wait-for-move sleeve along z-axis;
	move sleeve to z-axis [0.000000] speed [3.000000];
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = gun;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare;
}

AimWeapon2(heading, pitch)
{
	signal SIGNAL_AIM2;
	set-signal-mask SIGNAL_AIM2;
	turn lgun to x-axis <0.000000> - pitch speed <50.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn lgun around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon2()
{
	spin lgatling around z-axis speed <900.000000>;
	return (1);
}

Shot2(zero)
{
	signal SIGNAL_SHOOT1;
	set-signal-mask SIGNAL_SHOOT1;
	emit-sfx 1024 + 1 from lflare;
	return(1);
}

AimFromWeapon2(pieceIndex)
{
	pieceIndex = lgun;
}

QueryWeapon2(pieceIndex)
{
	pieceIndex = lflare;
}

AimWeapon3(heading, pitch)
{
	signal SIGNAL_AIM3;
	set-signal-mask SIGNAL_AIM3;
	turn rgun to x-axis <0.000000> - pitch speed <50.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn rgun around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon3()
{
	spin rgatling around z-axis speed <-900.000000>;
	return (1);
}

Shot3(zero)
{
	signal SIGNAL_SHOOT2;
	set-signal-mask SIGNAL_SHOOT2;
	emit-sfx 1024 + 1 from rflare;
	return(1);
}

AimFromWeapon3(pieceIndex)
{
	pieceIndex = rgun;
}

QueryWeapon3(pieceIndex)
{
	pieceIndex = rflare;
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		explode sleeve type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type FALL | NOHEATCLOUD;
		explode gun type FALL | NOHEATCLOUD;
		explode sleeve type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode gun type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode gun type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode sleeve type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
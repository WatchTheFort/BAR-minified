
#include "exptype.h"

piece  base, dish,emit;

static-var  shieldEnabled, statechg_DesiredState, statechg_StateChanging;
static-var  Stunned;

#define BASEPIECE base
#define HITSPEED <15.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 8
#define MAXTILT 200

#include "unit_hitbyweaponid_and_smoke.h"

ShieldOn()
{
	shieldEnabled = 1;
}

ShieldOff()
{
	shieldEnabled = 0;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script ShieldOn();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script ShieldOff();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Go()
{
	spin dish around y-axis speed <15.000000>;
}
Stop()
{
	spin dish around y-axis speed <0.000000>;
}
Create()
{
	hide emit;
	call-script Go();
	call-script InitState();
}
SetStunned(State)
{
    Stunned = State;
	if (Stunned) {
	    call-script Stop();
	} else {
	    call-script Go();
	}
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

AimWeapon1(heading, pitch)
{
	sleep 100;
	return (shieldEnabled);
}

FireWeapon1()
{
	sleep 100;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = base;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = base;
}



AimWeapon2(heading, pitch)
{
	sleep 100;
	return (shieldEnabled);
}

FireWeapon2()
{
	sleep 100;
}

QueryWeapon2(pieceIndex)
{
	pieceIndex = base;
}

AimFromWeapon2(pieceIndex)
{
	pieceIndex = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode dish type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode emit type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode dish type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode emit type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode dish type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode emit type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode dish type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode emit type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}

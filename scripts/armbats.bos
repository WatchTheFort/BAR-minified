#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1a, flare1b, flare1c, flare2a, flare2b, flare2c, base, turret1, turret2, wake1, wake2, barrel1a, barrel1b, barrel1c, barrel2a, barrel2b, barrel2c, ground, turret4, sleeve4, barrel41, flare41, barrel42, flare42, turret5, sleeve5, barrel51, flare51, barrel52, flare52, turret6, sleeve6, barrel61, flare61, barrel62, flare62, turret7, sleeve7, barrel71, flare71, barrel72, flare72, iongun, ionbarrel, ionflare;

static-var  bAiming, Static_Var_2, restore_delay, gun_2, gun_3,gun_4, gun_5,gun_6, gun_7, oldHead, aimDir;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8
#define SIG_AIM_4			16
#define SIG_AIM_5			32
#define SIG_AIM_6			64
#define SIG_AIM_7			128
#define SIG_MOVE			256


SetDirection(heading)
{
	var spd;
	spd = (get ABS(oldHead) - get ABS(heading)) / 2;
	turn ground to y-axis heading speed spd;
	turn base to y-axis 0-heading speed spd;
	oldHead = heading;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	set-signal-mask 0;	
	turn turret4 to y-axis <0.000000> speed <50.000000>;
	turn sleeve4 to x-axis <0.000000> speed <25.000000>;
	
	turn turret5 to y-axis <0.000000> speed <50.000000>;
	turn sleeve5 to x-axis <0.000000> speed <25.000000>;
	
	turn turret6 to y-axis <0.000000> speed <50.000000>;
	turn sleeve6 to x-axis <0.000000> speed <25.000000>;
	
	turn turret7 to y-axis <0.000000> speed <50.000000>;
	turn sleeve7 to x-axis <0.000000> speed <25.000000>;
}

RockOnWaves()
{
	var rockDir, rockAng, rockSpeed;
	rockDir = <-0.1>;
	rockAng = <-0.1>;
	while( TRUE )
	{
		while( get ABS(rockAng) < <1.11> )
		{
			rockSpeed = <1.25> - get ABS(rockAng);
			turn ground to x-axis rockAng speed rockSpeed*2;
			wait-for-turn ground around x-axis;
			rockAng = rockAng + rockDir;
		}
		rockDir = 0 - rockDir;
		rockAng = rockAng + rockDir + rockDir;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script RockOnWaves();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare1a;
	hide flare1b;
	hide flare1c;
	hide flare2a;
	hide flare2b;
	hide flare2c;
	hide flare41;
	hide flare42;
	hide flare51;
	hide flare52;
	hide flare61;
	hide flare62;
	hide flare71;
	hide flare72;
	hide ionflare;
	bAiming = TRUE;
	Static_Var_2 = 1;
	gun_2 = flare1a;
	gun_3 = flare1a;
	gun_4 = flare41;
	gun_5 = flare51;
	gun_6 = flare61;
	gun_7 = flare71;
	restore_delay = 3000;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 8;
}

RestorePrimary()
{
	sleep restore_delay;
	turn turret1 to y-axis <0.000000> speed <15.000000>;
	turn turret1 to x-axis <0.000000> speed <8.000000>;
	bAiming = TRUE;
}

RestoreSecondary()
{
	sleep restore_delay;
	turn turret2 to y-axis <0.000000> speed <15.000000>;
	turn turret2 to x-axis <0.000000> speed <8.000000>;
	Static_Var_2 = 1;
}

waveSplash()
{
	while( TRUE )
	{
		turn base to x-axis <-1.0> speed <1.0>;
		move base to y-axis [0.23] speed [0.17];
		wait-for-turn base around x-axis;
		turn base to x-axis <0.0> speed <1.0>;
		move base to y-axis [0.0] speed [0.17];
		wait-for-turn base around x-axis;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	var waketime;
	start-script waveSplash();
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		waketime = (get CURRENT_SPEED) * 100 / get MAX_SPEED;
		if( waketime < 50 ) waketime = 50;
		sleep 12000 / waketime;
	}
}

StopMoving()
{
	signal SIG_MOVE;
	turn base to x-axis <0.0> speed <1.0>;
	move base to y-axis [0.0] speed [0.17];
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	turn turret1 to y-axis heading speed <15.000000>;
	turn turret1 to x-axis <0.000000> - pitch speed <8.000000>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn turret1 around x-axis;
	while( gun_2 )
	{
		wait-for-move barrel1a along z-axis;
		wait-for-move barrel1b along z-axis;
		wait-for-move barrel1c along z-axis;
		bAiming = TRUE;
		gun_2 = flare1a;
	}
	start-script RestorePrimary();
	return (1);
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn turret2 to y-axis heading speed <15.000000>;
	turn turret2 to x-axis <0.000000> - pitch speed <8.000000>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn turret2 around x-axis;
	while( gun_3 )
	{
		wait-for-move barrel2a along z-axis;
		wait-for-move barrel2b along z-axis;
		wait-for-move barrel2c along z-axis;
		Static_Var_2 = 1;
		gun_3 = flare1a;
	}
	start-script RestoreSecondary();
	return (1);
}

FireWeapon2()
{
	if( bAiming == 1 )
	{
		emit-sfx 1024 + 0 from flare1a;
		move barrel1a to z-axis [-2.500000] now;
		sleep 150;
		move barrel1a to z-axis [0.000000] speed [1.000000];
	}
	if( bAiming == 2 )
	{
		emit-sfx 1024 + 0 from flare1b;
		move barrel1b to z-axis [-2.500000] now;
		sleep 150;
		move barrel1b to z-axis [0.000000] speed [1.000000];
	}
	if( bAiming == 3 )
	{
		gun_2 = flare1b;
		emit-sfx 1024 + 0 from flare1c;
		move barrel1c to z-axis [-2.500000] now;
		sleep 150;
		move barrel1c to z-axis [0.000000] speed [1.000000];
	}
	++bAiming;
}

FireWeapon3()
{
	if( Static_Var_2 == 1 )
	{
		emit-sfx 1024 + 0 from flare2a;
		move barrel2a to z-axis [-2.500000] now;
		sleep 150;
		move barrel2a to z-axis [0.000000] speed [1.000000];
	}
	if( Static_Var_2 == 2 )
	{
		emit-sfx 1024 + 0 from flare2b;
		move barrel2b to z-axis [-2.500000] now;
		sleep 150;
		move barrel2b to z-axis [0.000000] speed [1.000000];
	}
	if( Static_Var_2 == 3 )
	{
		gun_3 = flare1b;
		emit-sfx 1024 + 0 from flare2c;
		move barrel2c to z-axis [-2.500000] now;
		sleep 150;
		move barrel2c to z-axis [0.000000] speed [1.000000];
	}
	++Static_Var_2;
}

AimFromWeapon2(piecenum)
{
	piecenum = turret1;
}

QueryWeapon2(piecenum)
{
	if( bAiming == 1 )
	{
		piecenum = flare1a;
	}
	if( bAiming == 2 )
	{
		piecenum = flare1b;
	}
	if( bAiming == 3 )
	{
		piecenum = flare1c;
	}
}

AimFromWeapon3(piecenum)
{
	piecenum = turret2;
}

QueryWeapon3(piecenum)
{
	if( Static_Var_2 == 1 )
	{
		piecenum = flare2a;
	}
	if( Static_Var_2 == 2 )
	{
		piecenum = flare2b;
	}
	if( Static_Var_2 == 3 )
	{
		piecenum = flare2c;
	}
}

AimWeapon1(heading, pitch)
{
	return (1);
}

AimFromWeapon1(piecenum)
{
	piecenum = ionbarrel;
}

QueryWeapon1(piecenum)
{
	piecenum = ionflare;
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM_4;
	set-signal-mask SIG_AIM_4;
	turn turret4 to y-axis heading speed <50.000000>;
	turn sleeve4 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn turret4 around y-axis;
	wait-for-turn sleeve4 around x-axis;
	aimDir = heading;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon4()
{
	if( gun_4 )
	{
		move barrel42 to z-axis [-2.000000] speed [500.000000];
		wait-for-move barrel42 along z-axis;
		move barrel42 to z-axis [0.000000] speed [3.000000];
		emit-sfx 1024 + 0 from flare42;
	}
	else
	{
		move barrel41 to z-axis [-2.000000] speed [500.000000];
		wait-for-move barrel41 along z-axis;
		move barrel41 to z-axis [0.000000] speed [3.000000];
		emit-sfx 1024 + 0 from flare41;
	}
	gun_4 = !gun_4;
}

AimFromWeapon4(piecenum)
{
	piecenum = turret4;
}

QueryWeapon4(piecenum)
{
	piecenum = flare41 + gun_4;
}

AimWeapon5(heading, pitch)
{
	signal SIG_AIM_5;
	set-signal-mask SIG_AIM_5;
	turn turret5 to y-axis heading speed <50.000000>;
	turn sleeve5 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn turret5 around y-axis;
	wait-for-turn sleeve5 around x-axis;
	aimDir = heading;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon5()
{
	if( gun_5 )
	{
		move barrel52 to z-axis [-2.000000] speed [500.000000];
		wait-for-move barrel52 along z-axis;
		move barrel52 to z-axis [0.000000] speed [3.000000];
		emit-sfx 1024 + 0 from flare52;
	}
	else
	{
		move barrel51 to z-axis [-2.000000] speed [500.000000];
		wait-for-move barrel51 along z-axis;
		move barrel51 to z-axis [0.000000] speed [3.000000];
		emit-sfx 1024 + 0 from flare51;
	}
	gun_5 = !gun_5;
}

AimFromWeapon5(piecenum)
{
	piecenum = turret5;
}

QueryWeapon5(piecenum)
{
	piecenum = flare51 + gun_5;
}

AimWeapon6(heading, pitch)
{
	signal SIG_AIM_6;
	set-signal-mask SIG_AIM_6;
	turn turret6 to y-axis heading speed <50.000000>;
	turn sleeve6 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn turret6 around y-axis;
	wait-for-turn sleeve6 around x-axis;
	aimDir = heading;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon6()
{
	if( gun_6 )
	{
		move barrel62 to z-axis [-2.000000] speed [500.000000];
		wait-for-move barrel62 along z-axis;
		move barrel62 to z-axis [0.000000] speed [3.000000];
		emit-sfx 1024 + 0 from flare62;
	}
	else
	{
		move barrel61 to z-axis [-2.000000] speed [500.000000];
		wait-for-move barrel61 along z-axis;
		move barrel61 to z-axis [0.000000] speed [3.000000];
		emit-sfx 1024 + 0 from flare61;
	}
	gun_6 = !gun_6;
}

AimFromWeapon6(piecenum)
{
	piecenum = turret6;
}

QueryWeapon6(piecenum)
{
	piecenum = flare61 + gun_6;
}

AimWeapon7(heading, pitch)
{
	signal SIG_AIM_7;
	set-signal-mask SIG_AIM_7;
	turn turret7 to y-axis heading speed <50.000000>;
	turn sleeve7 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn turret7 around y-axis;
	wait-for-turn sleeve7 around x-axis;
	aimDir = heading;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon7()
{
	if( gun_7 )
	{
		move barrel72 to z-axis [-2.000000] speed [500.000000];
		wait-for-move barrel72 along z-axis;
		move barrel72 to z-axis [0.000000] speed [3.000000];
		emit-sfx 1024 + 0 from flare72;
	}
	else
	{
		move barrel71 to z-axis [-2.000000] speed [500.000000];
		wait-for-move barrel71 along z-axis;
		move barrel71 to z-axis [0.000000] speed [3.000000];
		emit-sfx 1024 + 0 from flare71;
	}
	gun_7 = !gun_7;
}

AimFromWeapon7(piecenum)
{
	piecenum = turret7;
}

QueryWeapon7(piecenum)
{
	piecenum = flare71 + gun_7;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare1a;
	hide flare1b;
	hide flare1c;
	hide flare2a;
	hide flare2b;
	hide flare2c;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type SHATTER | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel1a type FALL | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
		explode barrel1b type FALL | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
		explode barrel1c type FALL | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		explode barrel2a type FALL | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
		explode barrel2b type FALL | EXPLODE_ON_HIT | BITMAP5 | NOHEATCLOUD;
		explode barrel2c type FALL | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
		explode base type SHATTER | NOHEATCLOUD;
		explode flare1a type FALL | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		explode flare1b type FALL | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
		explode flare1c type FALL | EXPLODE_ON_HIT | BITMAP5 | NOHEATCLOUD;
		explode flare2a type FALL | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
		explode flare2b type FALL | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
		explode flare2c type FALL | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		explode turret2 type SHATTER | BITMAP5 | NOHEATCLOUD;
		explode wake1 type FALL | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
		explode wake2 type FALL | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode barrel1a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
	explode barrel1b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
	explode barrel1c type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
	explode barrel2a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
	explode barrel2b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5 | NOHEATCLOUD;
	explode barrel2c type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
	explode base type SHATTER | NOHEATCLOUD;
	explode flare1a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
	explode flare1b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
	explode flare1c type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5 | NOHEATCLOUD;
	explode flare2a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
	explode flare2b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
	explode flare2c type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
	explode turret2 type SHATTER | EXPLODE_ON_HIT | BITMAP5 | NOHEATCLOUD;
	explode wake1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
	explode wake2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
	return corpsetype;
}

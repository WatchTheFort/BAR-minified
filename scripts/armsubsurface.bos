#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, base, tail, turret, launcher, hole1, hole2;

static-var  gun_1, gun_2;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_MOVE			8


Create()
{
	gun_1 = flare1;
	gun_2 = 1;
	return (0);
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 256 | 3 from tail;
		sleep 250;
	}
	return (0);
}

StopMoving()
{
	signal SIG_MOVE;
	return (0);
}
AimPrimary()
{
	signal SIG_AIM;
	return (1);
}

FirePrimary()
{
	gun_1 = !gun_1;
	return (0);
}

QueryPrimary(piecenum)
{
	piecenum = gun_1;
	return (0);
}

AimFromPrimary(piecenum)
{
	piecenum = base;
}

AimSecondary(heading,pitch)
{
	signal SIG_AIM_2;
	turn turret to y-axis heading speed <120>;
	turn launcher to x-axis <0> - pitch speed <30>;
	wait-for-turn turret around y-axis;
	wait-for-turn launcher around x-axis;
	return (1);
}

FireSecondary()
{
	gun_2 = gun_2 + 1;
	if (gun_2 == 3)
	{
	gun_2 = 1;
	}
	return (0);
}

QuerySecondary(piecenum)
{
	if (gun_2 == 1)
	{
	piecenum = hole1;
	}
	else
	{
	piecenum = hole2;
	}
	return (0);
}

AimFromSecondary(piecenum)
{
	piecenum = turret;
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type SHATTER | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type SHATTER | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type SHATTER | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type SHATTER | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
	return (corpsetype);
}

#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, base, tail;

static-var  gun_1, restore_delay, aimDir;

// Signal definitions
#define SIG_MOVE			2
#define SIG_AIM			4


Create()
{
	gun_1 = flare1;
		restore_delay = 3000;
	return (0);
}

RestoreAfterDelay()
{
	sleep restore_delay;
	
	set-signal-mask 0;
	turn base to y-axis <0.000000> speed <35.000000>;
	turn base to x-axis <0.000000> speed <15.000000>;
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 256 | 3 from tail;
		sleep 250;
	}
	return (0);
}

StopMoving()
{
	signal SIG_MOVE;
	return (0);
}

FirePrimary()
{
	gun_1 = !gun_1;
	return (0);
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn base to y-axis heading speed <35>;
	turn base to x-axis <0.000000> - pitch speed <15>;
	wait-for-turn base around y-axis;
	wait-for-turn base around x-axis;
	aimDir = heading;
	start-script RestoreAfterDelay();
	return (1);
}

QueryPrimary(piecenum)
{
	piecenum = gun_1;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type SHATTER | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type SHATTER | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type SHATTER | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type SHATTER | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
	return (corpsetype);
}

#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SIG_BUILD		4	

piece  llathe, rlathe, torso, hips, Lleg, Rleg, Rfoot, Lfoot,
       Lshoulder, Rshoulder, head, Rarm, Larm, llathepoint, rlathepoint, shield1,
       shield2, shield3, shield4;

static-var  bMoving, spray, statechg_DesiredState, statechg_StateChanging, notBuilding, moveSpeed, currentSpeed;


walk()
{
	if( bMoving )
	{
		move hips to z-axis [0.000000] now;
		move hips to z-axis [0.119995] speed (currentSpeed / 100) * [1.000000];
		move Lleg to y-axis [0.000000] now;
		move Lleg to y-axis [-0.200000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <3.027473> now;
		turn hips to x-axis <5.000000> speed (currentSpeed / 100) * <24.000000>;
		turn torso to y-axis <9.719780> now;
		turn torso to y-axis <7.000000> speed (currentSpeed / 100) * <24.000000>;
		turn Lleg to x-axis <-29.186813> now;
		turn Lleg to x-axis <-26.005495> speed (currentSpeed / 100) * <27.000000>;
		turn Rleg to x-axis <24.324176> now;
		turn Rleg to x-axis <28.005495> speed (currentSpeed / 100) * <45.000000>;
		turn Rfoot to x-axis <-4.247253> now;
		turn Rfoot to x-axis <16.000000> speed (currentSpeed / 100) * <203.000000>;
		turn Lfoot to x-axis <0.000000> now;
		turn Lfoot to x-axis <7.000000> speed (currentSpeed / 100) * <76.000000>;
		turn Lshoulder to x-axis <-32.225275> now;
		turn Lshoulder to x-axis <-22.000000> speed (currentSpeed / 100) * <100.000000>;
		turn Rshoulder to x-axis <-27.362637> now;
		turn Rshoulder to x-axis <-19.000000> speed (currentSpeed / 100) * <82.000000>;
		turn head to y-axis <-9.109890> now;
		turn head to y-axis <-6.000000> speed (currentSpeed / 100) * <24.000000>;
		turn Rarm to x-axis <-35.263736> now;
		turn Rarm to x-axis <-34.005495> speed (currentSpeed / 100) * <3.000000>;
		turn rlathe to x-axis <37.087912> now;
		turn rlathe to x-axis <26.005495> speed (currentSpeed / 100) * <109.000000>;
		turn Larm to x-axis <2.417582> now;
		turn Larm to x-axis <-7.000000> speed (currentSpeed / 100) * <100.000000>;
		turn llathe to x-axis <47.428571> now;
		turn llathe to x-axis <53.010989> speed (currentSpeed / 100) * <63.000000>;
		sleep (1 / currentSpeed) * 100;
	}
	if( bMoving )
	{
		move hips to z-axis [0.250000] speed (currentSpeed / 100) * [1.000000];
		move Lleg to y-axis [-0.500000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <7.000000> speed (currentSpeed / 100) * <24.000000>;
		turn torso to y-axis <4.000000> speed (currentSpeed / 100) * <24.000000>;
		turn Lleg to x-axis <-23.005495> speed (currentSpeed / 100) * <27.000000>;
		turn Rleg to x-axis <33.005495> speed (currentSpeed / 100) * <45.000000>;
		turn Rfoot to x-axis <36.005495> speed (currentSpeed / 100) * <203.000000>;
		turn Lfoot to x-axis <15.000000> speed (currentSpeed / 100) * <76.000000>;
		turn Lshoulder to x-axis <-12.000000> speed (currentSpeed / 100) * <100.000000>;
		turn Rshoulder to x-axis <-10.000000> speed (currentSpeed / 100) * <82.000000>;
		turn head to y-axis <-4.000000> speed (currentSpeed / 100) * <24.000000>;
		turn Rarm to x-axis <-34.005495> speed (currentSpeed / 100) * <3.000000>;
		turn rlathe to x-axis <15.000000> speed (currentSpeed / 100) * <109.000000>;
		turn Larm to x-axis <-17.000000> speed (currentSpeed / 100) * <100.000000>;
		turn llathe to x-axis <60.010989> speed (currentSpeed / 100) * <63.000000>;
		sleep (1 / currentSpeed) * 100;
	}
	if( bMoving )
	{
		move hips to y-axis [0.150000] speed (currentSpeed / 100) * [2.000000];
		move hips to z-axis [0.250000] speed (currentSpeed / 100) * [0.000000];
		move Lleg to y-axis [-0.119995] speed (currentSpeed / 100) * [1.000000];
		move Rleg to y-axis [0.400000] speed (currentSpeed / 100) * [6.000000];
		move Rfoot to y-axis [0.700000] speed (currentSpeed / 100) * [1.000000];
		move Lfoot to y-axis [-0.500000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <6.000000> speed (currentSpeed / 100) * <20.000000>;
		turn torso to y-axis <3.000000> speed (currentSpeed / 100) * <30.000000>;
		turn Lleg to x-axis <-14.000000> speed (currentSpeed / 100) * <152.000000>;
		turn Rleg to x-axis <13.000000> speed (currentSpeed / 100) * <334.000000>;
		turn Rfoot to x-axis <45.010989> speed (currentSpeed / 100) * <157.000000>;
		turn Lfoot to x-axis <7.000000> speed (currentSpeed / 100) * <126.000000>;
		turn Lshoulder to x-axis <-19.000000> speed (currentSpeed / 100) * <121.000000>;
		turn Rshoulder to x-axis <-10.000000> speed (currentSpeed / 100) * <5.000000>;
		turn head to y-axis <-3.000000> speed (currentSpeed / 100) * <20.000000>;
		turn Rarm to x-axis <-29.005495> speed (currentSpeed / 100) * <91.000000>;
		turn rlathe to x-axis <9.000000> speed (currentSpeed / 100) * <101.000000>;
		turn Larm to x-axis <-25.005495> speed (currentSpeed / 100) * <131.000000>;
		turn llathe to x-axis <77.016484> speed (currentSpeed / 100) * <293.000000>;
		sleep (1 / currentSpeed) * 60;
	}
	if( bMoving )
	{
		move hips to y-axis [0.300000] speed (currentSpeed / 100) * [2.000000];
		move hips to z-axis [0.250000] speed (currentSpeed / 100) * [0.000000];
		move Lleg to y-axis [-0.200000] speed (currentSpeed / 100) * [1.000000];
		move Rleg to y-axis [0.789996] speed (currentSpeed / 100) * [6.000000];
		move Rfoot to y-axis [0.150000] speed (currentSpeed / 100) * [1.000000];
		move Lfoot to y-axis [-0.100000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <5.000000> speed (currentSpeed / 100) * <20.000000>;
		turn torso to y-axis <1.000000> speed (currentSpeed / 100) * <30.000000>;
		turn Lleg to x-axis <-5.000000> speed (currentSpeed / 100) * <152.000000>;
		turn Rleg to x-axis <-6.000000> speed (currentSpeed / 100) * <334.000000>;
		turn Rfoot to x-axis <55.010989> speed (currentSpeed / 100) * <157.000000>;
		turn Lfoot to x-axis <0.000000> speed (currentSpeed / 100) * <126.000000>;
		turn Lshoulder to x-axis <-26.005495> speed (currentSpeed / 100) * <121.000000>;
		turn Rshoulder to x-axis <-10.000000> speed (currentSpeed / 100) * <5.000000>;
		turn head to y-axis <-1.000000> speed (currentSpeed / 100) * <20.000000>;
		turn Rarm to x-axis <-23.005495> speed (currentSpeed / 100) * <91.000000>;
		turn rlathe to x-axis <3.000000> speed (currentSpeed / 100) * <101.000000>;
		turn Larm to x-axis <-33.005495> speed (currentSpeed / 100) * <131.000000>;
		turn llathe to x-axis <95.021978> speed (currentSpeed / 100) * <293.000000>;
		sleep (1 / currentSpeed) * 60;
	}
	if( bMoving )
	{
		move hips to z-axis [0.200000] speed (currentSpeed / 100) * [0.000000];
		move Lleg to y-axis [-0.250000] speed (currentSpeed / 100) * [0.000000];
		move Rleg to y-axis [0.400000] speed (currentSpeed / 100) * [6.000000];
		move Rfoot to y-axis [0.700000] speed (currentSpeed / 100) * [1.000000];
		turn hips to x-axis <1.000000> speed (currentSpeed / 100) * <65.000000>;
		turn torso to y-axis <0.000000> speed (currentSpeed / 100) * <25.000000>;
		turn Lleg to x-axis <8.000000> speed (currentSpeed / 100) * <228.000000>;
		turn Rleg to x-axis <-20.000000> speed (currentSpeed / 100) * <238.000000>;
		turn Rfoot to x-axis <43.005495> speed (currentSpeed / 100) * <197.000000>;
		turn Lfoot to x-axis <-10.000000> speed (currentSpeed / 100) * <167.000000>;
		turn Lshoulder to x-axis <-17.000000> speed (currentSpeed / 100) * <162.000000>;
		turn Rshoulder to x-axis <-10.000000> speed (currentSpeed / 100) * <5.000000>;
		turn head to y-axis <0.000000> speed (currentSpeed / 100) * <30.000000>;
		turn Rarm to x-axis <-17.000000> speed (currentSpeed / 100) * <101.000000>;
		turn rlathe to x-axis <1.000000> speed (currentSpeed / 100) * <20.000000>;
		turn Larm to x-axis <-43.005495> speed (currentSpeed / 100) * <172.000000>;
		turn llathe to x-axis <79.016484> speed (currentSpeed / 100) * <263.000000>;
		sleep (1 / currentSpeed) * 60;
	}
	if( bMoving )
	{
		move hips to z-axis [0.150000] speed (currentSpeed / 100) * [0.000000];
		move Lleg to y-axis [-0.300000] speed (currentSpeed / 100) * [0.000000];
		move Rleg to y-axis [0.000000] speed (currentSpeed / 100) * [3.000000];
		move Rfoot to y-axis [0.000000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <-2.000000> speed (currentSpeed / 100) * <39.000000>;
		turn torso to y-axis <-1.000000> speed (currentSpeed / 100) * <15.000000>;
		turn Lleg to x-axis <21.000000> speed (currentSpeed / 100) * <136.000000>;
		turn Rleg to x-axis <-35.005495> speed (currentSpeed / 100) * <142.000000>;
		turn Rfoot to x-axis <31.005495> speed (currentSpeed / 100) * <118.000000>;
		turn Lfoot to x-axis <-20.000000> speed (currentSpeed / 100) * <100.000000>;
		turn Lshoulder to x-axis <-7.000000> speed (currentSpeed / 100) * <97.000000>;
		turn Rshoulder to x-axis <-10.000000> speed (currentSpeed / 100) * <3.000000>;
		turn head to y-axis <1.000000> speed (currentSpeed / 100) * <18.000000>;
		turn Rarm to x-axis <-11.000000> speed (currentSpeed / 100) * <60.000000>;
		turn rlathe to x-axis <0.000000> speed (currentSpeed / 100) * <12.000000>;
		turn Larm to x-axis <-54.010989> speed (currentSpeed / 100) * <103.000000>;
		turn llathe to x-axis <63.010989> speed (currentSpeed / 100) * <158.000000>;
		sleep (1 / currentSpeed) * 100;
	}
	if( bMoving )
	{
		move hips to y-axis [0.150000] speed (currentSpeed / 100) * [1.000000];
		move Lleg to y-axis [-0.150000] speed (currentSpeed / 100) * [1.000000];
		move Lfoot to y-axis [-0.500000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <0.000000> speed (currentSpeed / 100) * <27.000000>;
		turn torso to y-axis <-4.000000> speed (currentSpeed / 100) * <27.000000>;
		turn Lleg to x-axis <22.000000> speed (currentSpeed / 100) * <6.000000>;
		turn Rleg to x-axis <-32.005495> speed (currentSpeed / 100) * <27.000000>;
		turn Rfoot to x-axis <15.000000> speed (currentSpeed / 100) * <158.000000>;
		turn Lfoot to x-axis <-13.000000> speed (currentSpeed / 100) * <66.000000>;
		turn Lshoulder to x-axis <-9.000000> speed (currentSpeed / 100) * <24.000000>;
		turn Rshoulder to x-axis <-20.000000> speed (currentSpeed / 100) * <97.000000>;
		turn head to y-axis <3.000000> speed (currentSpeed / 100) * <21.000000>;
		turn Rarm to x-axis <-3.000000> speed (currentSpeed / 100) * <82.000000>;
		turn rlathe to x-axis <12.000000> speed (currentSpeed / 100) * <121.000000>;
		turn Larm to x-axis <-56.010989> speed (currentSpeed / 100) * <24.000000>;
		turn llathe to x-axis <65.010989> speed (currentSpeed / 100) * <15.000000>;
		sleep (1 / currentSpeed) * 100;
	}
	if( bMoving )
	{
		move hips to y-axis [0.000000] speed (currentSpeed / 100) * [1.000000];
		move Lleg to y-axis [0.000000] speed (currentSpeed / 100) * [1.000000];
		move Lfoot to y-axis [0.000000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <3.000000> speed (currentSpeed / 100) * <27.000000>;
		turn torso to y-axis <-7.000000> speed (currentSpeed / 100) * <27.000000>;
		turn Lleg to x-axis <23.005495> speed (currentSpeed / 100) * <6.000000>;
		turn Rleg to x-axis <-29.005495> speed (currentSpeed / 100) * <27.000000>;
		turn Rfoot to x-axis <0.000000> speed (currentSpeed / 100) * <158.000000>;
		turn Lfoot to x-axis <-6.000000> speed (currentSpeed / 100) * <66.000000>;
		turn Lshoulder to x-axis <-12.000000> speed (currentSpeed / 100) * <24.000000>;
		turn Rshoulder to x-axis <-30.005495> speed (currentSpeed / 100) * <97.000000>;
		turn head to y-axis <6.000000> speed (currentSpeed / 100) * <21.000000>;
		turn Rarm to x-axis <4.000000> speed (currentSpeed / 100) * <82.000000>;
		turn rlathe to x-axis <24.005495> speed (currentSpeed / 100) * <121.000000>;
		turn Larm to x-axis <-58.010989> speed (currentSpeed / 100) * <24.000000>;
		turn llathe to x-axis <66.010989> speed (currentSpeed / 100) * <15.000000>;
		sleep (1 / currentSpeed) * 100;
	}
	if( bMoving )
	{
		move hips to z-axis [0.200000] speed (currentSpeed / 100) * [0.000000];
		move Rleg to y-axis [-0.200000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <5.000000> speed (currentSpeed / 100) * <24.000000>;
		turn torso to y-axis <-5.000000> speed (currentSpeed / 100) * <15.000000>;
		turn Lleg to x-axis <28.005495> speed (currentSpeed / 100) * <57.000000>;
		turn Rleg to x-axis <-26.005495> speed (currentSpeed / 100) * <33.000000>;
		turn Rfoot to x-axis <7.000000> speed (currentSpeed / 100) * <72.000000>;
		turn Lfoot to x-axis <14.000000> speed (currentSpeed / 100) * <215.000000>;
		turn Lshoulder to x-axis <-14.000000> speed (currentSpeed / 100) * <27.000000>;
		turn Rshoulder to x-axis <-19.000000> speed (currentSpeed / 100) * <109.000000>;
		turn head to y-axis <4.000000> speed (currentSpeed / 100) * <15.000000>;
		turn Rarm to x-axis <-6.000000> speed (currentSpeed / 100) * <112.000000>;
		turn rlathe to x-axis <31.005495> speed (currentSpeed / 100) * <63.000000>;
		turn Larm to x-axis <-46.010989> speed (currentSpeed / 100) * <121.000000>;
		turn llathe to x-axis <47.010989> speed (currentSpeed / 100) * <191.000000>;
		sleep (1 / currentSpeed) * 100;
	}
	if( bMoving )
	{
		move hips to z-axis [0.250000] speed (currentSpeed / 100) * [0.000000];
		move Rleg to y-axis [-0.500000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <7.000000> speed (currentSpeed / 100) * <24.000000>;
		turn torso to y-axis <-4.000000> speed (currentSpeed / 100) * <15.000000>;
		turn Lleg to x-axis <34.005495> speed (currentSpeed / 100) * <57.000000>;
		turn Rleg to x-axis <-23.005495> speed (currentSpeed / 100) * <33.000000>;
		turn Rfoot to x-axis <14.000000> speed (currentSpeed / 100) * <72.000000>;
		turn Lfoot to x-axis <36.005495> speed (currentSpeed / 100) * <215.000000>;
		turn Lshoulder to x-axis <-17.000000> speed (currentSpeed / 100) * <27.000000>;
		turn Rshoulder to x-axis <-8.000000> speed (currentSpeed / 100) * <109.000000>;
		turn head to y-axis <3.000000> speed (currentSpeed / 100) * <15.000000>;
		turn Rarm to x-axis <-17.000000> speed (currentSpeed / 100) * <112.000000>;
		turn rlathe to x-axis <37.005495> speed (currentSpeed / 100) * <63.000000>;
		turn Larm to x-axis <-34.005495> speed (currentSpeed / 100) * <121.000000>;
		turn llathe to x-axis <28.005495> speed (currentSpeed / 100) * <191.000000>;
		sleep (1 / currentSpeed) * 100;
	}
	if( bMoving )
	{
		move Lleg to y-axis [0.400000] speed (currentSpeed / 100) * [6.000000];
		move Rleg to y-axis [-0.700000] speed (currentSpeed / 100) * [0.000000];
		move Rfoot to y-axis [-0.200000] speed (currentSpeed / 100) * [0.000000];
		move Lfoot to y-axis [0.700000] speed (currentSpeed / 100) * [1.000000];
		turn hips to x-axis <6.000000> speed (currentSpeed / 100) * <25.000000>;
		turn torso to y-axis <-3.000000> speed (currentSpeed / 100) * <20.000000>;
		turn Lleg to x-axis <13.000000> speed (currentSpeed / 100) * <344.000000>;
		turn Rleg to x-axis <-13.000000> speed (currentSpeed / 100) * <157.000000>;
		turn Rfoot to x-axis <6.000000> speed (currentSpeed / 100) * <136.000000>;
		turn Lfoot to x-axis <45.010989> speed (currentSpeed / 100) * <157.000000>;
		turn Lshoulder to x-axis <-6.000000> speed (currentSpeed / 100) * <192.000000>;
		turn Rshoulder to x-axis <-13.000000> speed (currentSpeed / 100) * <91.000000>;
		turn head to y-axis <2.000000> speed (currentSpeed / 100) * <15.000000>;
		turn Rarm to x-axis <-24.005495> speed (currentSpeed / 100) * <111.000000>;
		turn rlathe to x-axis <52.010989> speed (currentSpeed / 100) * <253.000000>;
		turn Larm to x-axis <-33.005495> speed (currentSpeed / 100) * <20.000000>;
		turn llathe to x-axis <16.000000> speed (currentSpeed / 100) * <202.000000>;
		sleep (1 / currentSpeed) * 60;
	}
	if( bMoving )
	{
		move Lleg to y-axis [0.789996] speed (currentSpeed / 100) * [6.000000];
		move Rleg to y-axis [-0.100000] speed (currentSpeed / 100) * [0.000000];
		move Rfoot to y-axis [-0.500000] speed (currentSpeed / 100) * [0.000000];
		move Lfoot to y-axis [0.150000] speed (currentSpeed / 100) * [1.000000];
		turn hips to x-axis <4.000000> speed (currentSpeed / 100) * <25.000000>;
		turn torso to y-axis <-1.000000> speed (currentSpeed / 100) * <20.000000>;
		turn Lleg to x-axis <-6.000000> speed (currentSpeed / 100) * <344.000000>;
		turn Rleg to x-axis <-4.000000> speed (currentSpeed / 100) * <157.000000>;
		turn Rfoot to x-axis <-1.000000> speed (currentSpeed / 100) * <136.000000>;
		turn Lfoot to x-axis <55.010989> speed (currentSpeed / 100) * <157.000000>;
		turn Lshoulder to x-axis <5.000000> speed (currentSpeed / 100) * <192.000000>;
		turn Rshoulder to x-axis <-19.000000> speed (currentSpeed / 100) * <91.000000>;
		turn head to y-axis <1.000000> speed (currentSpeed / 100) * <15.000000>;
		turn Rarm to x-axis <-31.005495> speed (currentSpeed / 100) * <111.000000>;
		turn rlathe to x-axis <68.016484> speed (currentSpeed / 100) * <253.000000>;
		turn Larm to x-axis <-32.005495> speed (currentSpeed / 100) * <20.000000>;
		turn llathe to x-axis <4.000000> speed (currentSpeed / 100) * <202.000000>;
		sleep (1 / currentSpeed) * 60;
	}
	if( bMoving )
	{
		move Lleg to y-axis [0.469995] speed (currentSpeed / 100) * [5.000000];
		move Rleg to y-axis [-0.119995] speed (currentSpeed / 100) * [0.000000];
		move Lfoot to y-axis [0.700000] speed (currentSpeed / 100) * [1.000000];
		turn hips to x-axis <1.000000> speed (currentSpeed / 100) * <50.000000>;
		turn torso to y-axis <0.000000> speed (currentSpeed / 100) * <40.000000>;
		turn Lleg to x-axis <-21.000000> speed (currentSpeed / 100) * <253.000000>;
		turn Rleg to x-axis <7.000000> speed (currentSpeed / 100) * <197.000000>;
		turn Rfoot to x-axis <-9.000000> speed (currentSpeed / 100) * <131.000000>;
		turn Lfoot to x-axis <42.005495> speed (currentSpeed / 100) * <217.000000>;
		turn Lshoulder to x-axis <-4.000000> speed (currentSpeed / 100) * <167.000000>;
		turn Rshoulder to x-axis <-20.000000> speed (currentSpeed / 100) * <20.000000>;
		turn head to y-axis <-1.000000> speed (currentSpeed / 100) * <45.000000>;
		turn Rarm to x-axis <-33.005495> speed (currentSpeed / 100) * <40.000000>;
		turn Larm to x-axis <-14.000000> speed (currentSpeed / 100) * <299.000000>;
		turn llathe to x-axis <1.000000> speed (currentSpeed / 100) * <45.000000>;
		sleep (1 / currentSpeed) * 60;
	}
	if( bMoving )
	{
		move Lleg to y-axis [0.150000] speed (currentSpeed / 100) * [3.000000];
		move Rleg to y-axis [-0.150000] speed (currentSpeed / 100) * [0.000000];
		move Lfoot to y-axis [0.000000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <-1.000000> speed (currentSpeed / 100) * <30.000000>;
		turn torso to y-axis <3.000000> speed (currentSpeed / 100) * <24.000000>;
		turn Lleg to x-axis <-37.005495> speed (currentSpeed / 100) * <152.000000>;
		turn Rleg to x-axis <19.000000> speed (currentSpeed / 100) * <118.000000>;
		turn Rfoot to x-axis <-17.000000> speed (currentSpeed / 100) * <79.000000>;
		turn Lfoot to x-axis <29.005495> speed (currentSpeed / 100) * <130.000000>;
		turn Lshoulder to x-axis <-14.000000> speed (currentSpeed / 100) * <100.000000>;
		turn Rshoulder to x-axis <-21.000000> speed (currentSpeed / 100) * <12.000000>;
		turn head to y-axis <-4.000000> speed (currentSpeed / 100) * <27.000000>;
		turn Rarm to x-axis <-35.005495> speed (currentSpeed / 100) * <24.000000>;
		turn Larm to x-axis <3.000000> speed (currentSpeed / 100) * <179.000000>;
		turn llathe to x-axis <-1.000000> speed (currentSpeed / 100) * <27.000000>;
		sleep (1 / currentSpeed) * 100;
	}
	if( bMoving )
	{
		move hips to z-axis [0.119995] speed (currentSpeed / 100) * [1.000000];
		move Lleg to y-axis [0.700000] speed (currentSpeed / 100) * [0.000000];
		move Rleg to y-axis [-0.700000] speed (currentSpeed / 100) * [0.000000];
		move Rfoot to y-axis [-0.200000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <0.000000> speed (currentSpeed / 100) * <21.000000>;
		turn torso to y-axis <6.000000> speed (currentSpeed / 100) * <33.000000>;
		turn Lleg to x-axis <-33.005495> speed (currentSpeed / 100) * <39.000000>;
		turn Rleg to x-axis <21.000000> speed (currentSpeed / 100) * <24.000000>;
		turn Rfoot to x-axis <-10.000000> speed (currentSpeed / 100) * <66.000000>;
		turn Lfoot to x-axis <14.000000> speed (currentSpeed / 100) * <145.000000>;
		turn Lshoulder to x-axis <-23.005495> speed (currentSpeed / 100) * <88.000000>;
		turn Rshoulder to x-axis <-24.005495> speed (currentSpeed / 100) * <27.000000>;
		turn head to y-axis <-6.000000> speed (currentSpeed / 100) * <24.000000>;
		turn Rarm to x-axis <-35.005495> speed (currentSpeed / 100) * <3.000000>;
		turn rlathe to x-axis <52.010989> speed (currentSpeed / 100) * <155.000000>;
		turn Larm to x-axis <3.000000> speed (currentSpeed / 100) * <6.000000>;
		turn llathe to x-axis <23.005495> speed (currentSpeed / 100) * <243.000000>;
		sleep (1 / currentSpeed) * 100;
	}
}

walklegs()
{
	if( bMoving )
	{
		move hips to z-axis [0.000000] now;
		move hips to z-axis [0.119995] speed (currentSpeed / 100) * [1.000000];
		move Lleg to y-axis [0.000000] now;
		move Lleg to y-axis [-0.200000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <3.027473> now;
		turn hips to x-axis <5.000000> speed (currentSpeed / 100) * <24.000000>;
		turn Lleg to x-axis <-29.186813> now;
		turn Lleg to x-axis <-26.005495> speed (currentSpeed / 100) * <27.000000>;
		turn Rleg to x-axis <24.324176> now;
		turn Rleg to x-axis <28.005495> speed (currentSpeed / 100) * <45.000000>;
		turn Rfoot to x-axis <-4.247253> now;
		turn Rfoot to x-axis <16.000000> speed (currentSpeed / 100) * <203.000000>;
		turn Lfoot to x-axis <0.000000> now;
		turn Lfoot to x-axis <7.000000> speed (currentSpeed / 100) * <76.000000>;
		sleep (1 / currentSpeed) * 100;
	}
	if( bMoving )
	{
		move hips to z-axis [0.250000] speed (currentSpeed / 100) * [1.000000];
		move Lleg to y-axis [-0.500000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <7.000000> speed (currentSpeed / 100) * <24.000000>;
		turn Lleg to x-axis <-23.005495> speed (currentSpeed / 100) * <27.000000>;
		turn Rleg to x-axis <33.005495> speed (currentSpeed / 100) * <45.000000>;
		turn Rfoot to x-axis <36.005495> speed (currentSpeed / 100) * <203.000000>;
		turn Lfoot to x-axis <15.000000> speed (currentSpeed / 100) * <76.000000>;
		sleep (1 / currentSpeed) * 100;
	}
	if( bMoving )
	{
		move hips to y-axis [0.150000] speed (currentSpeed / 100) * [2.000000];
		move hips to z-axis [0.250000] speed (currentSpeed / 100) * [0.000000];
		move Lleg to y-axis [-0.119995] speed (currentSpeed / 100) * [1.000000];
		move Rleg to y-axis [0.400000] speed (currentSpeed / 100) * [6.000000];
		move Rfoot to y-axis [0.700000] speed (currentSpeed / 100) * [1.000000];
		move Lfoot to y-axis [-0.500000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <6.000000> speed (currentSpeed / 100) * <20.000000>;
		turn Lleg to x-axis <-14.000000> speed (currentSpeed / 100) * <152.000000>;
		turn Rleg to x-axis <13.000000> speed (currentSpeed / 100) * <334.000000>;
		turn Rfoot to x-axis <45.010989> speed (currentSpeed / 100) * <157.000000>;
		turn Lfoot to x-axis <7.000000> speed (currentSpeed / 100) * <126.000000>;
		sleep (1 / currentSpeed) * 60;
	}
	if( bMoving )
	{
		move hips to y-axis [0.300000] speed (currentSpeed / 100) * [2.000000];
		move hips to z-axis [0.250000] speed (currentSpeed / 100) * [0.000000];
		move Lleg to y-axis [-0.200000] speed (currentSpeed / 100) * [1.000000];
		move Rleg to y-axis [0.789996] speed (currentSpeed / 100) * [6.000000];
		move Rfoot to y-axis [0.150000] speed (currentSpeed / 100) * [1.000000];
		move Lfoot to y-axis [-0.100000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <5.000000> speed (currentSpeed / 100) * <20.000000>;
		turn Lleg to x-axis <-5.000000> speed (currentSpeed / 100) * <152.000000>;
		turn Rleg to x-axis <-6.000000> speed (currentSpeed / 100) * <334.000000>;
		turn Rfoot to x-axis <55.010989> speed (currentSpeed / 100) * <157.000000>;
		turn Lfoot to x-axis <0.000000> speed (currentSpeed / 100) * <126.000000>;
		sleep (1 / currentSpeed) * 60;
	}
	if( bMoving )
	{
		move hips to z-axis [0.200000] speed (currentSpeed / 100) * [0.000000];
		move Lleg to y-axis [-0.250000] speed (currentSpeed / 100) * [0.000000];
		move Rleg to y-axis [0.400000] speed (currentSpeed / 100) * [6.000000];
		move Rfoot to y-axis [0.700000] speed (currentSpeed / 100) * [1.000000];
		turn hips to x-axis <1.000000> speed (currentSpeed / 100) * <65.000000>;
		turn Lleg to x-axis <8.000000> speed (currentSpeed / 100) * <228.000000>;
		turn Rleg to x-axis <-20.000000> speed (currentSpeed / 100) * <238.000000>;
		turn Rfoot to x-axis <43.005495> speed (currentSpeed / 100) * <197.000000>;
		turn Lfoot to x-axis <-10.000000> speed (currentSpeed / 100) * <167.000000>;
		sleep (1 / currentSpeed) * 60;
	}
	if( bMoving )
	{
		move hips to z-axis [0.150000] speed (currentSpeed / 100) * [0.000000];
		move Lleg to y-axis [-0.300000] speed (currentSpeed / 100) * [0.000000];
		move Rleg to y-axis [0.000000] speed (currentSpeed / 100) * [3.000000];
		move Rfoot to y-axis [0.000000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <-2.000000> speed (currentSpeed / 100) * <39.000000>;
		turn Lleg to x-axis <21.000000> speed (currentSpeed / 100) * <136.000000>;
		turn Rleg to x-axis <-35.005495> speed (currentSpeed / 100) * <142.000000>;
		turn Rfoot to x-axis <31.005495> speed (currentSpeed / 100) * <118.000000>;
		turn Lfoot to x-axis <-20.000000> speed (currentSpeed / 100) * <100.000000>;
		sleep (1 / currentSpeed) * 100;
	}
	if( bMoving )
	{
		move hips to y-axis [0.150000] speed (currentSpeed / 100) * [1.000000];
		move Lleg to y-axis [-0.150000] speed (currentSpeed / 100) * [1.000000];
		move Lfoot to y-axis [-0.500000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <0.000000> speed (currentSpeed / 100) * <27.000000>;
		turn Lleg to x-axis <22.000000> speed (currentSpeed / 100) * <6.000000>;
		turn Rleg to x-axis <-32.005495> speed (currentSpeed / 100) * <27.000000>;
		turn Rfoot to x-axis <15.000000> speed (currentSpeed / 100) * <158.000000>;
		turn Lfoot to x-axis <-13.000000> speed (currentSpeed / 100) * <66.000000>;
		sleep (1 / currentSpeed) * 100;
	}
	if( bMoving )
	{
		move hips to y-axis [0.000000] speed (currentSpeed / 100) * [1.000000];
		move Lleg to y-axis [0.000000] speed (currentSpeed / 100) * [1.000000];
		move Lfoot to y-axis [0.000000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <3.000000> speed (currentSpeed / 100) * <27.000000>;
		turn Lleg to x-axis <23.005495> speed (currentSpeed / 100) * <6.000000>;
		turn Rleg to x-axis <-29.005495> speed (currentSpeed / 100) * <27.000000>;
		turn Rfoot to x-axis <0.000000> speed (currentSpeed / 100) * <158.000000>;
		turn Lfoot to x-axis <-6.000000> speed (currentSpeed / 100) * <66.000000>;
		sleep (1 / currentSpeed) * 100;
	}
	if( bMoving )
	{
		move hips to z-axis [0.200000] speed (currentSpeed / 100) * [0.000000];
		move Rleg to y-axis [-0.200000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <5.000000> speed (currentSpeed / 100) * <24.000000>;
		turn Lleg to x-axis <28.005495> speed (currentSpeed / 100) * <57.000000>;
		turn Rleg to x-axis <-26.005495> speed (currentSpeed / 100) * <33.000000>;
		turn Rfoot to x-axis <7.000000> speed (currentSpeed / 100) * <72.000000>;
		turn Lfoot to x-axis <14.000000> speed (currentSpeed / 100) * <215.000000>;
		sleep (1 / currentSpeed) * 100;
	}
	if( bMoving )
	{
		move hips to z-axis [0.250000] speed (currentSpeed / 100) * [0.000000];
		move Rleg to y-axis [-0.500000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <7.000000> speed (currentSpeed / 100) * <24.000000>;
		turn Lleg to x-axis <34.005495> speed (currentSpeed / 100) * <57.000000>;
		turn Rleg to x-axis <-23.005495> speed (currentSpeed / 100) * <33.000000>;
		turn Rfoot to x-axis <14.000000> speed (currentSpeed / 100) * <72.000000>;
		turn Lfoot to x-axis <36.005495> speed (currentSpeed / 100) * <215.000000>;
		sleep (1 / currentSpeed) * 100;
	}
	if( bMoving )
	{
		move Lleg to y-axis [0.400000] speed (currentSpeed / 100) * [6.000000];
		move Rleg to y-axis [-0.700000] speed (currentSpeed / 100) * [0.000000];
		move Rfoot to y-axis [-0.200000] speed (currentSpeed / 100) * [0.000000];
		move Lfoot to y-axis [0.700000] speed (currentSpeed / 100) * [1.000000];
		turn hips to x-axis <6.000000> speed (currentSpeed / 100) * <25.000000>;
		turn Lleg to x-axis <13.000000> speed (currentSpeed / 100) * <344.000000>;
		turn Rleg to x-axis <-13.000000> speed (currentSpeed / 100) * <157.000000>;
		turn Rfoot to x-axis <6.000000> speed (currentSpeed / 100) * <136.000000>;
		turn Lfoot to x-axis <45.010989> speed (currentSpeed / 100) * <157.000000>;
		sleep (1 / currentSpeed) * 60;
	}
	if( bMoving )
	{
		move Lleg to y-axis [0.789996] speed (currentSpeed / 100) * [6.000000];
		move Rleg to y-axis [-0.100000] speed (currentSpeed / 100) * [0.000000];
		move Rfoot to y-axis [-0.500000] speed (currentSpeed / 100) * [0.000000];
		move Lfoot to y-axis [0.150000] speed (currentSpeed / 100) * [1.000000];
		turn hips to x-axis <4.000000> speed (currentSpeed / 100) * <25.000000>;
		turn Lleg to x-axis <-6.000000> speed (currentSpeed / 100) * <344.000000>;
		turn Rleg to x-axis <-4.000000> speed (currentSpeed / 100) * <157.000000>;
		turn Rfoot to x-axis <-1.000000> speed (currentSpeed / 100) * <136.000000>;
		turn Lfoot to x-axis <55.010989> speed (currentSpeed / 100) * <157.000000>;
		sleep (1 / currentSpeed) * 60;
	}
	if( bMoving )
	{
		move Lleg to y-axis [0.469995] speed (currentSpeed / 100) * [5.000000];
		move Rleg to y-axis [-0.119995] speed (currentSpeed / 100) * [0.000000];
		move Lfoot to y-axis [0.700000] speed (currentSpeed / 100) * [1.000000];
		turn hips to x-axis <1.000000> speed (currentSpeed / 100) * <50.000000>;
		turn Lleg to x-axis <-21.000000> speed (currentSpeed / 100) * <253.000000>;
		turn Rleg to x-axis <7.000000> speed (currentSpeed / 100) * <197.000000>;
		turn Rfoot to x-axis <-9.000000> speed (currentSpeed / 100) * <131.000000>;
		turn Lfoot to x-axis <42.005495> speed (currentSpeed / 100) * <217.000000>;
		sleep (1 / currentSpeed) * 60;
	}
	if( bMoving )
	{
		move Lleg to y-axis [0.150000] speed (currentSpeed / 100) * [3.000000];
		move Rleg to y-axis [-0.150000] speed (currentSpeed / 100) * [0.000000];
		move Lfoot to y-axis [0.000000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <-1.000000> speed (currentSpeed / 100) * <30.000000>;
		turn Lleg to x-axis <-37.005495> speed (currentSpeed / 100) * <152.000000>;
		turn Rleg to x-axis <19.000000> speed (currentSpeed / 100) * <118.000000>;
		turn Rfoot to x-axis <-17.000000> speed (currentSpeed / 100) * <79.000000>;
		turn Lfoot to x-axis <29.005495> speed (currentSpeed / 100) * <130.000000>;
		sleep (1 / currentSpeed) * 100;
	}
	if( bMoving )
	{
		move hips to z-axis [0.119995] speed (currentSpeed / 100) * [1.000000];
		move Lleg to y-axis [0.700000] speed (currentSpeed / 100) * [0.000000];
		move Rleg to y-axis [-0.700000] speed (currentSpeed / 100) * [0.000000];
		move Rfoot to y-axis [-0.200000] speed (currentSpeed / 100) * [0.000000];
		turn hips to x-axis <0.000000> speed (currentSpeed / 100) * <21.000000>;
		turn Lleg to x-axis <-33.005495> speed (currentSpeed / 100) * <39.000000>;
		turn Rleg to x-axis <21.000000> speed (currentSpeed / 100) * <24.000000>;
		turn Rfoot to x-axis <-10.000000> speed (currentSpeed / 100) * <66.000000>;
		turn Lfoot to x-axis <14.000000> speed (currentSpeed / 100) * <145.000000>;
		sleep (1 / currentSpeed) * 100;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = notBuilding;
		if( moving )
		{
			if( aiming )
			{
				call-script walk();
			}
			else
			{
				call-script walklegs();
			}
			justmoved = TRUE;
		}
		else
		{
			if( justmoved )
			{
				move hips to y-axis [0.000000] speed (currentSpeed / 100) * [3.000000];
				move hips to z-axis [0.000000] speed (currentSpeed / 100) * [3.000000];
				move Lleg to y-axis [0.000000] speed (currentSpeed / 100) * [3.000000];
				move Rleg to y-axis [0.000000] speed (currentSpeed / 100) * [3.000000];
				move Rfoot to y-axis [0.000000] speed (currentSpeed / 100) * [3.000000];
				move Lfoot to y-axis [0.000000] speed (currentSpeed / 100) * [3.000000];
				turn hips to x-axis <0.000000> speed (currentSpeed / 100) * <150.000000>;
				turn torso to y-axis <0.000000> speed (currentSpeed / 100) * <150.000000>;
				turn Lleg to x-axis <0.000000> speed (currentSpeed / 100) * <150.000000>;
				turn Rleg to x-axis <0.000000> speed (currentSpeed / 100) * <150.000000>;
				turn Rfoot to x-axis <0.000000> speed (currentSpeed / 100) * <150.000000>;
				turn Lfoot to x-axis <0.000000> speed (currentSpeed / 100) * <150.000000>;
				justmoved = FALSE;
			}
		}
		sleep (1 / currentSpeed) * 100;
	}
}

Go()
{
	turn Lshoulder to x-axis <0.000000> now;
	turn Lshoulder to x-axis <-10.000000> speed <59.000000>;
	turn Rshoulder to x-axis <0.000000> now;
	turn Rshoulder to x-axis <-10.000000> speed <57.000000>;
	turn Rarm to x-axis <0.000000> now;
	turn Rarm to x-axis <-22.000000> speed <120.000000>;
	turn Larm to x-axis <0.000000> now;
	turn Larm to x-axis <-22.000000> speed <120.000000>;
	sleep (1 / currentSpeed) * 30;

	turn Lshoulder to x-axis <-21.000000> speed <48.000000>;
	turn Rshoulder to x-axis <-21.000000> speed <47.000000>;
	turn Rarm to x-axis <-44.005495> speed <98.000000>;
	turn Larm to x-axis <-44.005495> speed <98.000000>;
	sleep (1 / currentSpeed) * 60;

	turn Rarm to z-axis <33.005495> speed <145.000000>;
	turn rlathe to z-axis <-63.010989> speed <277.000000>;
	turn Larm to z-axis <-33.005495> speed <145.000000>;
	turn llathe to z-axis <62.010989> speed <272.000000>;
	sleep (1 / currentSpeed) * 60;

	turn torso to x-axis <27.005495> speed <121.000000>;
	turn Rarm to z-axis <20.000000> speed <58.000000>;
	turn Larm to z-axis <-20.000000> speed <58.000000>;
	sleep (1 / currentSpeed) * 90;
}

Stop()
{
	set INBUILDSTANCE to 0;
	turn torso to y-axis <0.000000> speed <160.000000>;
	wait-for-turn torso around y-axis;

	turn torso to x-axis <27.972527> now;
	turn torso to x-axis <0.000000> speed <139.000000>;
	turn Lshoulder to x-axis <-21.890110> speed <87.383907>;
	turn Rshoulder to x-axis <-21.280220> speed <84.949265>;
	turn Rarm to x-axis <-44.395604> speed <177.224387>;
	turn Rarm to z-axis <20.049451> now;
	turn Rarm to z-axis <33.005495> speed <66.000000>;
	turn rlathe to z-axis <-63.851648> speed <254.891659>;
	turn Larm to x-axis <-44.395604> speed <177.224387>;
	turn Larm to z-axis <-20.049451> now;
	turn Larm to z-axis <-33.005495> speed <66.000000>;
	turn llathe to z-axis <62.642857> speed <250.066244>;
	sleep (1 / currentSpeed) * 200;

	turn Rarm to z-axis <0.000000> speed <167.000000>;
	turn rlathe to z-axis <0.000000> speed <319.000000>;
	turn Larm to z-axis <0.000000> speed <167.000000>;
	turn llathe to z-axis <0.000000> speed <313.000000>;
	sleep (1 / currentSpeed) * 200;

	turn Lshoulder to x-axis <-10.000000> speed <54.000000>;
	turn Rshoulder to x-axis <-10.000000> speed <53.000000>;
	turn Rarm to x-axis <-22.000000> speed <111.000000>;
	turn Larm to x-axis <-22.000000> speed <111.000000>;
	sleep (1 / currentSpeed) * 200;

	turn Lshoulder to x-axis <0.000000> speed <54.000000>;
	turn Rshoulder to x-axis <0.000000> speed <53.000000>;
	turn Rarm to x-axis <0.000000> speed <111.000000>;
	turn Larm to x-axis <0.000000> speed <111.000000>;
	sleep (1 / currentSpeed) * 200;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState )
		{
			call-script Stop();
			notBuilding = 1;
			currentstate = 1;
		}
		else
		{
			call-script Go();
			notBuilding = 0;
			currentstate = 0;
		}
	}
	statechg_StateChanging = FALSE;
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = 2 * (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<40) currentSpeed=40;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script MotionControl();
	start-script UnitSpeed();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = FALSE;
	notBuilding = 1;
	spray = llathe;
	moveSpeed = get MAX_SPEED;
	currentSpeed = 100;
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	start-script SmokeUnit();
}

StartBuilding(heading, pitch)
{
	start-script RequestState(0);
	while( notBuilding ) sleep 100;
	signal SIG_BUILD;
	turn torso to y-axis heading speed <240.000000>;
	wait-for-turn torso around y-axis;
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	signal SIG_BUILD;	
	set-signal-mask SIG_BUILD;
	sleep 6000;
	set-signal-mask 0;
	signal SIG_BUILD;	
	start-script RequestState(1);
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

QueryNanoPiece(piecenum)
{
	piecenum = spray;
	spray = !spray;
}

/*
TargetHeading(Func_Var_1)
{
	Static_Var_1 = 0 - Func_Var_1;
}
*/

SweetSpot(piecenum)
{
	piecenum = torso;
}

Killed(severity, corpsetype)
{
    corpsetype = 3;
	if( severity <= 50 )
	{
        //explode head type SHATTER | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
        //explode hips type FALL | FIRE | SMOKE | BITMAP2 | NOHEATCLOUD;
        //explode Larm type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
        //explode Lfoot type FALL | FIRE | SMOKE | BITMAP4 | NOHEATCLOUD;
        //explode llathe type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5 | NOHEATCLOUD;
        //explode llathepoint type FALL | FIRE | SMOKE | BITMAP1 | NOHEATCLOUD;
        //explode Lleg type FALL | FIRE | SMOKE | BITMAP2 | NOHEATCLOUD;
        //explode Lshoulder type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
        //explode Rarm type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
        //explode Rfoot type FALL | FIRE | SMOKE | BITMAP5 | NOHEATCLOUD;
        explode rlathe type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
        explode rlathepoint type FALL | FIRE | SMOKE | BITMAP2 | NOHEATCLOUD;
        explode Rleg type FALL | FIRE | SMOKE | BITMAP3 | NOHEATCLOUD;
        explode Rshoulder type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
    }else{
        //explode head type SHATTER | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
        //explode hips type FALL | FIRE | SMOKE | BITMAP2 | NOHEATCLOUD;
        //explode Larm type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
        //explode Lfoot type FALL | FIRE | SMOKE | BITMAP4 | NOHEATCLOUD;
        //explode llathe type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5 | NOHEATCLOUD;
        //explode llathepoint type FALL | FIRE | SMOKE | BITMAP1 | NOHEATCLOUD;
        //explode Lleg type FALL | FIRE | SMOKE | BITMAP2 | NOHEATCLOUD;
        //explode Lshoulder type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
        explode Rarm type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
        explode Rfoot type FALL | FIRE | SMOKE | BITMAP5 | NOHEATCLOUD;
        explode rlathe type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
        explode rlathepoint type FALL | FIRE | SMOKE | BITMAP2 | NOHEATCLOUD;
        explode Rleg type FALL | FIRE | SMOKE | BITMAP3 | NOHEATCLOUD;
        explode Rshoulder type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
    }
    return corpsetype;
}

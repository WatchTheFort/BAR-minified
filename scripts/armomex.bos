#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, arms, level34, level68, level102, level136, level170, level204, level238, bottom;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, statechg_DesiredState, statechg_StateChanging, rockframe, Xrot, Zrot, Ymove;

RockOnWaves()
{
rockframe = 1;
while ( TRUE )
{
	Xrot = (get KCOS (rockframe * 690)) * 360 / 1024 ;
	Ymove = (get KSIN (rockframe * 650)) * 8;
	Zrot = (get KSIN (rockframe * 560)) * 360 / 1024;
	turn base to x-axis Xrot now;
	turn base to z-axis Zrot now;
	move base to y-axis Ymove now;
	rockframe = rockframe + 1;
	sleep 1;
}
}

HidePieces(groundlevel)
{
	move level238 to y-axis [-204] now;
	move level204 to y-axis [-170] now;
	move level170 to y-axis [-136] now;
	move level136 to y-axis [-102] now;
	move level102 to y-axis [-68] now;
	move level68 to y-axis [-34] now;
	move level34 to y-axis [0] now;
	move bottom to y-axis [34] - (groundlevel * 65536) now;
	if (groundlevel < 204)
	{
		hide level238;
		if (groundlevel < 170)
		{
			hide level204;
			if (groundlevel < 136)
			{
				hide level170;
				if (groundlevel < 102)
				{
					hide level136;

					if (groundlevel < 68)
					{
						hide level102;

						if (groundlevel < 34)
						{
							hide level68;
						}
					}
				}
			}
		}
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

fixGo()
{
	spin arms around y-axis speed <100> accelerate <1>;
}

Stop()
{
	stop-spin arms around y-axis decelerate <1>;
	wait-for-turn arms around y-axis;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script fixGo();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	Static_Var_1 = 0;
	Static_Var_2 = 80;
	Static_Var_3 = 160;
	dont-shade arms;
	dont-cache arms;
	call-script InitState();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

SweetSpot(piecenum)
{
	piecenum = base;
}

SetSpeed(Func_Var_1)
{
	Static_Var_1 = Func_Var_1 * 20;
}

Killed(severity, corpsetype)
{
	explode level34 type SHATTER | NOHEATCLOUD;	
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode arms type SHATTER | BITMAP1 | NOHEATCLOUD;
		//explode base type SHATTER | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode arms type SHATTER | BITMAP1 | NOHEATCLOUD;
		//explode base type SHATTER | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode arms type FALL | BITMAP1 | NOHEATCLOUD;
		explode arms type SHATTER | BITMAP2 | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode arms type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
	//explode base type SHATTER | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
	return corpsetype;
}
